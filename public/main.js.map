{"version":3,"sources":["webpack:////Users/Collier/projects/legend/legendExpressApp/config/docs.js","webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/admin/admin.component.css","webpack:///./src/app/admin/admin.component.html","webpack:///./src/app/admin/admin.component.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/details/details.component.css","webpack:///./src/app/details/details.component.html","webpack:///./src/app/details/details.component.ts","webpack:///./src/app/enterdoc/enterdoc.component.css","webpack:///./src/app/enterdoc/enterdoc.component.html","webpack:///./src/app/enterdoc/enterdoc.component.ts","webpack:///./src/app/guards/auth.guard.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/layout/layout.component.css","webpack:///./src/app/layout/layout.component.html","webpack:///./src/app/layout/layout.component.ts","webpack:///./src/app/loadfile/loadfile.component.css","webpack:///./src/app/loadfile/loadfile.component.html","webpack:///./src/app/loadfile/loadfile.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/material/material.module.ts","webpack:///./src/app/metrics/metrics.component.css","webpack:///./src/app/metrics/metrics.component.html","webpack:///./src/app/metrics/metrics.component.ts","webpack:///./src/app/navbar/navbar.component.css","webpack:///./src/app/navbar/navbar.component.html","webpack:///./src/app/navbar/navbar.component.ts","webpack:///./src/app/recent/recent.component.css","webpack:///./src/app/recent/recent.component.html","webpack:///./src/app/recent/recent.component.ts","webpack:///./src/app/refresh/refresh.component.css","webpack:///./src/app/refresh/refresh.component.html","webpack:///./src/app/refresh/refresh.component.ts","webpack:///./src/app/register/register.component.css","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.ts","webpack:///./src/app/search/search.component.css","webpack:///./src/app/search/search.component.html","webpack:///./src/app/search/search.component.ts","webpack:///./src/app/searchresults/searchresults.component.css","webpack:///./src/app/searchresults/searchresults.component.html","webpack:///./src/app/searchresults/searchresults.component.ts","webpack:///./src/app/sections/sections.component.css","webpack:///./src/app/sections/sections.component.html","webpack:///./src/app/sections/sections.component.ts","webpack:///./src/app/services/auth.service.ts","webpack:///./src/app/services/validate.service.ts","webpack:///./src/app/users/users.component.css","webpack:///./src/app/users/users.component.html","webpack:///./src/app/users/users.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AChgBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6E;;;;;;;;;;;AC7QA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;ACZA,mB;;;;;;;;;;;ACAA,8C;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,iCAAQ,GAAR;IACA,CAAC;IALU,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;;;SAGtB,CAAC;;OACW,cAAc,CAO1B;IAAD,qBAAC;CAAA;AAP0B;;;;;;;;;;;;ACP3B,mB;;;;;;;;;;;ACAA,oJ;;;;;;;;;;;;;;;;;;;;;ACA0C;AAO1C;IALA;QAME,UAAK,GAAG,KAAK,CAAC;IAChB,CAAC;IAFY,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;OACW,YAAY,CAExB;IAAD,mBAAC;CAAA;AAFwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPiC;AACjB;AACsC;AAClC;AACF;AACY;AAEC;AAGF;AACR;AACgB;AAEf;AACa;AACA;AACM;AACZ;AACG;AACS;AACN;AACG;AACH;AACqB;AACrB;AACH;AACM;AACG;AACA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","file":"main.js","sourcesContent":["module.exports = {\n  sections: ['Research',\n             'Editorial',\n             'Commentary',\n             'Practice',\n             'News',\n             'Humanities'\n            ], \n  onlineIssues: [\n                   'July 30, 2018',\n                   'July 23, 2018',\n                   'July 16, 2018',\n                   'July 9, 2018',\n                   'July 3, 2018',\n                   'June 25, 2018',\n                   'June 18, 2018',\n                   'June 4, 2018',\n                   'May 28, 2018',\n                   'May 14, 2018',\n                   'May 7, 2018'\n                ],\n\n  printIssues: [\n                'January 2017', \n                'February 2017',\n                'March 2017',\n                'April 2017',\n                'May 2017',\n                'June 2017',\n                'July 2017',\n                'August 2017',\n                'September 2017',\n                'October 2017',\n                'November 2017',\n                'December 2017',\n                'January 2018', \n                'February 2018',\n                'March 2018',\n                'April 2018',\n                'May 2018'\n                ],\n  collectionCodes: ['[539] Mental Health', \n                    '[7] Addiction Medicine', \n                    '[206] Cancer:Prostate', \n                    '[530]  Drugs: pain', \n                    '[314]  Eating Disorders',\n                    '[10]  Health Services',\n                    '[539]  Mental Health',\n                    '[537]  Sepsis',\n                    '[518]  Cases', \n                    '[519]  Choosing Wisely', \n                    '[530]  Drugs Pain' \n                   ],\n  authortypes: ['staff', 'freelance'],\n  editors: ['Kate Brown', \n            'Vicky Bell', \n            'Wendy Caroll', \n            'Erin Driscoll', \n            'Lea Libiseja', \n            'Olivier Nguyen-Huu'\n           ], \n  coordinators: ['Kate Brown', \n                 'Vicky Bell', \n                 'Wendy Caroll', \n                 'Erin Driscoll', \n                 'Lea Libiseja', \n                 'Olivier Nguyen-Huu'\n                ], \n  proofers: ['Kate Brown', \n             'Vicky Bell', \n             'Wendy Caroll', \n             'Erin Driscoll', \n             'Lea Libiseja', \n             'Olivier Nguyen-Huu'\n            ], \n  se1s: ['Kirsten Patrick', \n         'Diane Kelsall', \n         'Matthew Stanbrook', \n         'Ken Flegel'\n        ] \n }\n\n\n ","var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\tvar module = __webpack_require__(id);\n\treturn module;\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<p>\\n  admin works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\nexport class AdminComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<app-navbar></app-navbar>\\n<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations'; \nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { HttpClientModule } from '@angular/common/http';\nimport * as moment from 'moment';\n\nimport { AuthService } from './services/auth.service';\nimport {AuthGuard} from './guards/auth.guard';\nimport { ValidateService } from './services/validate.service';\n\nimport { AppComponent } from './app.component';\nimport { MaterialModule } from './material/material.module';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { RegisterComponent } from './register/register.component';\nimport { HomeComponent } from './home/home.component';\nimport { LoginComponent } from './login/login.component';\nimport { EnterdocComponent } from './enterdoc/enterdoc.component';\nimport { RecentComponent } from './recent/recent.component';\nimport { DetailsComponent } from './details/details.component';\nimport { SearchComponent } from './search/search.component';\nimport { SearchresultsComponent } from './searchresults/searchresults.component';\nimport { LayoutComponent } from './layout/layout.component';\nimport { AdminComponent } from './admin/admin.component';\nimport { MetricsComponent } from './metrics/metrics.component';\nimport { LoadfileComponent } from './loadfile/loadfile.component';\nimport { SectionsComponent } from './sections/sections.component';\nimport { UsersComponent } from './users/users.component';\nimport { RefreshComponent } from './refresh/refresh.component';  \n\nconst appRoutes: Routes = [\n  {path: '', component: HomeComponent},\n  {path: 'home', component: HomeComponent},\n  {path: 'register', component: RegisterComponent},\n  {path: 'login', component: LoginComponent},\n  {path: 'refresh', component: RefreshComponent},\n  {path: 'enterdoc', component: EnterdocComponent, canActivate:[AuthGuard]},\n  {path: 'loadfile', component: LoadfileComponent, canActivate:[AuthGuard]},\n  {path: 'recent', component: RecentComponent, canActivate:[AuthGuard]},\n  {path: 'search', component: SearchComponent, canActivate:[AuthGuard]},\n  {path: 'layout', component: LayoutComponent, canActivate:[AuthGuard]},\n  {path: 'admin', component: AdminComponent, canActivate:[AuthGuard]},\n  {path: 'metrics', component: MetricsComponent, canActivate:[AuthGuard]},\n  {path: 'sections', component: SectionsComponent, canActivate:[AuthGuard]},\n  {path: 'users', component: UsersComponent, canActivate:[AuthGuard]},\n  {path: 'details/:doc', component: DetailsComponent, canActivate:[AuthGuard]}\n]\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    RegisterComponent,\n    HomeComponent,\n    LoginComponent,\n    EnterdocComponent,\n    RecentComponent,\n    DetailsComponent,\n    SearchComponent,\n    SearchresultsComponent,\n    LayoutComponent,\n    AdminComponent,\n    MetricsComponent,\n    LoadfileComponent,\n    SectionsComponent,\n    UsersComponent,\n    RefreshComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    MaterialModule,\n    FormsModule,\n    HttpModule,\n    HttpClientModule,\n    RouterModule.forRoot(appRoutes)   \n  ],\n  providers: [ValidateService, AuthService, AuthGuard],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \".example-form {  \\n  min-width: 150px;  \\n  max-width: 500px;  \\n  width: 100%;  \\n}  \\n\\n.example-display {  \\n  flex: 1 1 auto;\\n  margin-left: 50px;\\n  margin-top: 50px;\\n  min-width: 150px;  \\n  max-width: 500px;  \\n  width: 100%;  \\n}  \\n\\n.example-full-width {  \\n  width: 100%;  \\n}  \\n\\n.align-form {\\n  flex: 1 1 auto;\\n  margin-left: 50px;\\n  margin-top: 50px;\\n}  \\n\\n.red-font {\\n\\tcolor: red;\\n}\"","module.exports = \"\\n<div class=\\\"example-display\\\">\\n  <section class=\\\"mat-typography\\\">\\n\\n    <div *ngIf=\\\"oneDoc && !editDoc\\\">\\n      <h2> {{ oneDoc.docTitle }}</h2>\\n      <p *ngIf=\\\"oneDoc.docSection\\\"><b>Section:</b> {{ oneDoc.docSection }}</p>\\n      <p *ngIf=\\\"oneDoc.docAuthor\\\"><b>Author:</b> {{ oneDoc.docAuthor }}</p> \\n      <p *ngIf=\\\"oneDoc.docDOI\\\"><b>DOI:</b> {{ oneDoc.docDOI }}</p>\\n      <p *ngIf=\\\"oneDoc.docETOCDateFormatted\\\"><b>eTOC Date:</b> {{ docETOCDateFormatted }}</p>\\n\\n      <mat-accordion>\\n        <mat-expansion-panel>\\n          <mat-expansion-panel-header>\\n            <mat-panel-title>\\n            <br>\\n              Collection Codes\\n            </mat-panel-title>\\n            <mat-panel-description>\\n            </mat-panel-description>\\n          </mat-expansion-panel-header>\\n          <br> \\n          <p *ngIf=\\\"oneDoc.docCollectionCode1\\\"> {{ oneDoc.docCollectionCode1 }}</p>\\n          <p *ngIf=\\\"oneDoc.docCollectionCode2\\\"> {{ oneDoc.docCollectionCode2 }}</p>\\n          <p *ngIf=\\\"oneDoc.docCollectionCode3\\\"> {{ oneDoc.docCollectionCode3 }}</p>\\n          <p *ngIf=\\\"oneDoc.docCollectionCode4\\\"> {{ oneDoc.docCollectionCode4 }}</p>\\n\\n        </mat-expansion-panel> \\n      </mat-accordion>\\n\\n      <br>\\n\\n      <mat-accordion>\\n        <mat-expansion-panel>\\n          <mat-expansion-panel-header>\\n            <mat-panel-title>\\n            <br>\\n              Document Details\\n            </mat-panel-title>\\n            <mat-panel-description>\\n            </mat-panel-description>\\n          </mat-expansion-panel-header> \\n          <br>\\n\\n          <p *ngIf=\\\"oneDoc.docOpenAccess\\\">Open Access</p>\\n          <p *ngIf=\\\"oneDoc.docTranslation\\\">Translation Required</p>\\n          <p *ngIf=\\\"oneDoc.docCommissionDateFormatted\\\"><b>Commission Date:</b> {{ docCommissionDateFormatted }}</p>\\n          <p *ngIf=\\\"oneDoc.docAcceptDateFormatted\\\"><b>Accept Date:</b> {{ docAcceptDateFormatted }}</p>\\n          <p *ngIf=\\\"oneDoc.docPaymentDateFormatted\\\"><b>Payment Date:</b> {{ docPaymentDateFormatted }}</p>\\n          <p *ngIf=\\\"oneDoc.docPublishDateFormatted\\\"><b>Publish Date:</b> {{ docPublishDateFormatted }}</p>\\n          <p *ngIf=\\\"oneDoc.docInvoiceDateFormatted\\\"><b>Invoice Date:</b> {{ docInvoiceDateFormatted }}</p>\\n          <p *ngIf=\\\"oneDoc.docInvoiceAmountFormatted\\\"><b>Invoice Amount:</b> ${{ oneDoc.docInvoiceAmount }}</p>\\n\\n        </mat-expansion-panel> \\n      </mat-accordion>\\n\\n      <br>\\n\\n      <mat-accordion>\\n        <mat-expansion-panel>\\n          <mat-expansion-panel-header>\\n            <mat-panel-title>\\n              Online Issue \\n            </mat-panel-title>\\n            <mat-panel-description>\\n              \\n            </mat-panel-description>\\n          </mat-expansion-panel-header>\\n\\n          <p *ngIf=\\\"oneDoc.docOnlineIssue\\\"><b>Issue:</b> {{ oneDoc.docOnlineIssue }}</p>\\n          <p *ngIf=\\\"oneDoc.docFirstPageOnline\\\"><b>Start Page:</b> {{ oneDoc.docFirstPageOnline }}</p>\\n          <p *ngIf=\\\"oneDoc.docLastPageOnline\\\"><b>End Page:</b> {{ oneDoc.docLastPageOnline }}</p>\\n          <p *ngIf=\\\"oneDoc.docNumPagesOnline\\\"><b>Number Pages:</b> {{ oneDoc.docNumPagesOnline }}</p>\\n          <p *ngIf=\\\"oneDoc.docOnlineNotes\\\"><b>Notes:</b> {{ oneDoc.docOnlineNotes }}</p>\\n\\n        </mat-expansion-panel> \\n      </mat-accordion>\\n\\n      <br>\\n\\n      <mat-accordion>\\n        <mat-expansion-panel>\\n          <mat-expansion-panel-header>\\n            <mat-panel-title>\\n              Print Issue \\n            </mat-panel-title>\\n            <mat-panel-description>\\n              \\n            </mat-panel-description>\\n          </mat-expansion-panel-header>\\n\\n          <p *ngIf=\\\"oneDoc.docPrintIssue\\\"><b>Issue:</b> {{ oneDoc.docPrintIssue }}</p>\\n          <p *ngIf=\\\"oneDoc.docFirstPagePrint\\\"><b>Start Page:</b> {{ oneDoc.docFirstPagePrint }}</p>\\n          <p *ngIf=\\\"oneDoc.docLastPagePrint\\\"><b>End Page:</b> {{ oneDoc.docLastPagePrint }}</p>\\n          <p *ngIf=\\\"oneDoc.docNumPagesPrint\\\"><b>Number Pages:</b> {{ oneDoc.docNumPagesPrint }}</p>\\n          <p *ngIf=\\\"oneDoc.docAdConflicts\\\"><b>Advertising Conflicts:</b> {{ oneDoc.docAdConflicts }}</p>\\n          <p *ngIf=\\\"oneDoc.docPrintNotes\\\"><b>Notes:</b> {{ oneDoc.docPrintNotes }}</p>\\n\\n        </mat-expansion-panel> \\n      </mat-accordion>\\n\\n      <br>\\n\\n      <mat-accordion>\\n        <mat-expansion-panel>\\n          <mat-expansion-panel-header>\\n            <mat-panel-title>\\n            <br>\\n              Editing Timeline\\n            </mat-panel-title>\\n            <mat-panel-description>\\n            </mat-panel-description>\\n          </mat-expansion-panel-header> \\n          <br>\\n\\n          <p *ngIf=\\\"oneDoc.docEditor\\\"><b>Editor:</b> {{ oneDoc.docEditor }}</p>\\n          <p *ngIf=\\\"oneDoc.docCoordinator\\\"><b>Coordinator:</b> {{ oneDoc.docCoordinator }}</p>\\n          <p *ngIf=\\\"oneDoc.docProofReader\\\"><b>Proofreader:</b> {{ oneDoc.docProofReader }}</p>\\n          <p *ngIf=\\\"oneDoc.docSE1\\\"><b>SE1:</b> {{ oneDoc.docSE1 }}</p>\\n          <p *ngIf=\\\"oneDoc.docEnteredDate\\\"><b>Entered Date:</b> {{ docEnteredDateFormatted }}</p>\\n          <p *ngIf=\\\"oneDoc.docCopyEditBeginDate\\\"><b>Copy Edit Begin Date:</b> {{ docCopyEditBeginDateFormatted }}</p>\\n          <p *ngIf=\\\"oneDoc.docCopyEditCompleteDate\\\"><b>Copy Edit Complete Date:</b> {{ docCopyEditCompleteDateFormatted }}</p>\\n          <p *ngIf=\\\"oneDoc.docSendSEDate\\\"><b>Send to SE Date:</b> {{ docSendSEDateFormatted }}</p>\\n          <p *ngIf=\\\"oneDoc.docReturnSEDate\\\"><b>Return from SE Date:</b> {{ docReturnSEDateFormatted }}</p>\\n          <p *ngIf=\\\"oneDoc.docSendAuthorDate\\\"><b>Sent to Author Date:</b> {{ docSendAuthorDateFormatted }}</p>\\n          <p *ngIf=\\\"oneDoc.docReturnAuthorDate\\\"><b>Return from Author Date:</b> {{ docReturnAuthorDateFormatted }}</p>\\n          <p *ngIf=\\\"oneDoc.docReturnAuthorDate\\\"><b>Finalized Date:</b> {{ docReturnAuthorDateFormatted}}</p>\\n\\n        </mat-expansion-panel> \\n      </mat-accordion>\\n\\n      <br>\\n \\n      <div *ngIf=\\\"showNews\\\"> \\n\\n      <mat-accordion>\\n        <mat-expansion-panel>\\n          <mat-expansion-panel-header>\\n            <mat-panel-title>\\n              News Details \\n            </mat-panel-title>\\n            <mat-panel-description>\\n              \\n            </mat-panel-description>\\n          </mat-expansion-panel-header>\\n\\n          <p *ngIf=\\\"oneDoc.docNewsAuthorType\\\"><b>Author Type:</b> {{ oneDoc.docNewsAuthorType }}</p>\\n          <p *ngIf=\\\"oneDoc.docPublishDateCMAJnews\\\"><b>Date posted on cmajnews.com:</b> {{ docPublishDateCMAJnewsFormatted }}</p>\\n          <p *ngIf=\\\"oneDoc.docNewsCommissionDate\\\"><b>Commission Date:</b> {{ docNewsCommissionDateFormatted }}</p>\\n          <p *ngIf=\\\"oneDoc.docNewsInvoiceDate\\\"><b>Invoice Date:</b> {{ docNewsInvoiceDateFormatted }}</p>\\n          <p *ngIf=\\\"oneDoc.docNewsInvoiceAmount\\\"><b>Invoice Amount:</b> ${{ oneDoc.docNewsInvoiceAmount }}</p>\\n\\n        </mat-expansion-panel> \\n      </mat-accordion>\\n\\n      </div>\\n\\n      <br>\\n\\n      <hr class=\\\"hr-style\\\">\\n\\n      <div class=\\\"flex-center\\\">\\n        <span (click)=\\\"onEditDocSubmit()\\\">\\n          <button mat-raised-button>Edit Document</button>\\n        </span>\\n        <span (click)=\\\"onDeleteDocSubmit()\\\">\\n          <button mat-raised-button>Delete Document</button>\\n        </span>\\n      </div>\\n    </div>\\n  </section>\\n</div>  \\n\\n<div *ngIf=\\\"editDoc\\\">\\n<div class = \\\"align-form\\\">\\n  <section class = \\\"mat-typography\\\">\\n    <h2>Edit Document</h2>\\n    <form (submit)=\\\"onEditedDocSubmit()\\\" class=\\\"example-form\\\">  \\n\\n      <mat-form-field class=\\\"example-full-width\\\">  \\n        <input type=\\\"text\\\" matInput placeholder=\\\"Title\\\" [(ngModel)]=\\\"docTitle\\\" name=\\\"docTitle\\\">  \\n      </mat-form-field>  \\n\\n      <mat-form-field class=\\\"example-full-width\\\">  \\n        <input type=\\\"text\\\" matInput placeholder=\\\"Author\\\" [(ngModel)]=\\\"docAuthor\\\" name=\\\"docAuthor\\\">\\n      </mat-form-field>  \\n\\n      <mat-form-field class=\\\"example-full-width\\\">  \\n        <input type=\\\"number\\\" matInput placeholder=\\\"DOI\\\" [(ngModel)]=\\\"docDOI\\\" name=\\\"docDOI\\\">\\n      </mat-form-field>  \\n\\n      <mat-form-field class=\\\"example-full-width\\\">\\n        <mat-select [(ngModel)]=\\\"docSection\\\" name=\\\"docSection\\\" placeholder=\\\"Section\\\">\\n          <mat-option *ngFor=\\\"let s of sections\\\" [value]=\\\"s\\\"> {{s}} </mat-option>\\n        </mat-select>\\n      </mat-form-field>\\n\\n      <mat-accordion>\\n        <mat-expansion-panel>\\n          <mat-expansion-panel-header>\\n            <mat-panel-title>\\n              Collection Codes \\n            </mat-panel-title>\\n            <mat-panel-description>\\n              \\n            </mat-panel-description>\\n          </mat-expansion-panel-header>\\n          <mat-form-field class=\\\"example-full-width\\\">\\n            <mat-select [(ngModel)]=\\\"docCollectionCode1\\\" name=\\\"docCollectionCode1\\\" placeholder=\\\"Collection Code 1\\\">\\n              <mat-option *ngFor=\\\"let c of collectionCodes\\\" [value]=\\\"c\\\"> {{c}} </mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n\\n          <mat-form-field class=\\\"example-full-width\\\">\\n            <mat-select [(ngModel)]=\\\"docCollectionCode2\\\" name=\\\"docCollectionCode2\\\" placeholder=\\\"Collection Code 2\\\">\\n              <mat-option *ngFor=\\\"let c of collectionCodes\\\" [value]=\\\"c\\\"> {{c}} </mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n\\n          <mat-form-field class=\\\"example-full-width\\\">\\n            <mat-select [(ngModel)]=\\\"docCollectionCode3\\\" name=\\\"docCollectionCode3\\\" placeholder=\\\"Collection Code 3\\\">\\n              <mat-option *ngFor=\\\"let c of collectionCodes\\\" [value]=\\\"c\\\"> {{c}} </mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n\\n          <mat-form-field class=\\\"example-full-width\\\">\\n            <mat-select [(ngModel)]=\\\"docCollectionCode4\\\" name=\\\"docCollectionCode4\\\" placeholder=\\\"Collection Code 4\\\">\\n              <mat-option *ngFor=\\\"let c of collectionCodes\\\" [value]=\\\"c\\\"> {{c}} </mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n\\n        </mat-expansion-panel> \\n      </mat-accordion>\\n\\n      <br>\\n\\n      <mat-accordion>\\n        <mat-expansion-panel>\\n          <mat-expansion-panel-header>\\n            <mat-panel-title>\\n              Document Details  \\n            </mat-panel-title>\\n            <mat-panel-description>\\n            </mat-panel-description>\\n          </mat-expansion-panel-header>\\n\\n          <mat-form-field floatPlaceholder=\\\"always\\\" class=\\\"mat-form-field--no-underline example-full-width\\\">\\n            <input matInput placeholder=\\\"\\\" style=\\\"display: none\\\">\\n              <mat-checkbox [(ngModel)]=\\\"docOpenAccess\\\" name=\\\"docOpenAccess\\\">Open Access</mat-checkbox>\\n          </mat-form-field>\\n\\n          <mat-form-field floatPlaceholder=\\\"always\\\" class=\\\"mat-form-field--no-underline example-full-width\\\">\\n            <input matInput placeholder=\\\"\\\" style=\\\"display: none\\\">\\n              <mat-checkbox [(ngModel)]=\\\"docTranslation\\\" name=\\\"docTranslation\\\">Translation</mat-checkbox>\\n          </mat-form-field>\\n\\n          <mat-form-field class=\\\"example-full-width\\\">\\n            <input matInput [matDatepicker]=\\\"docCommisionDatePicker\\\" placeholder=\\\"Commission Date\\\" [(ngModel)]=\\\"docCommissionDate\\\" name=\\\"docCommissionDate\\\">\\n            <mat-datepicker-toggle matSuffix [for]=\\\"docCommisionDatePicker\\\"></mat-datepicker-toggle>\\n            <mat-datepicker #docCommisionDatePicker></mat-datepicker>\\n          </mat-form-field>\\n\\n          <mat-form-field class=\\\"example-full-width\\\">\\n            <input matInput [matDatepicker]=\\\"docAcceptDatePicker\\\" placeholder=\\\"Accept Date\\\" [(ngModel)]=\\\"docAcceptDate\\\" name=\\\"docAcceptDate\\\">\\n            <mat-datepicker-toggle matSuffix [for]=\\\"docAcceptDatePicker\\\"></mat-datepicker-toggle>\\n            <mat-datepicker #docAcceptDatePicker></mat-datepicker>\\n          </mat-form-field>\\n\\n          <mat-form-field class=\\\"example-full-width\\\">\\n            <input matInput [matDatepicker]=\\\"docPublishDatePicker\\\" placeholder=\\\"Publish Date\\\" [(ngModel)]=\\\"docPublishDate\\\" name=\\\"docPublishDate\\\">\\n            <mat-datepicker-toggle matSuffix [for]=\\\"docPublishDatePicker\\\"></mat-datepicker-toggle>\\n            <mat-datepicker #docPublishDatePicker></mat-datepicker>\\n          </mat-form-field>\\n\\n          <mat-form-field class=\\\"example-full-width\\\">\\n            <input matInput [matDatepicker]=\\\"docPaymentDatePicker\\\" placeholder=\\\"Payment Date\\\" [(ngModel)]=\\\"docPaymentDate\\\" name=\\\"docPaymentDate\\\">\\n            <mat-datepicker-toggle matSuffix [for]=\\\"docPaymentDatePicker\\\"></mat-datepicker-toggle>\\n            <mat-datepicker #docPaymentDatePicker></mat-datepicker>\\n          </mat-form-field>\\n\\n          <mat-form-field class=\\\"example-full-width\\\">\\n            <input matInput [matDatepicker]=\\\"docInvoiceDatePicker\\\" placeholder=\\\"Invoice Date\\\" [(ngModel)]=\\\"docInvoiceDate\\\" name=\\\"docInvoiceDate\\\">\\n            <mat-datepicker-toggle matSuffix [for]=\\\"docInvoiceDatePicker\\\"></mat-datepicker-toggle>\\n            <mat-datepicker #docInvoiceDatePicker></mat-datepicker>\\n          </mat-form-field>\\n\\n          <mat-form-field class=\\\"example-full-width\\\">\\n            <input type=\\\"number\\\" matInput [(ngModel)]=\\\"docInvoiceAmount\\\" name=\\\"docInvoiceAmount\\\" placeholder=\\\"Invoice Amount\\\">\\n            <span matPrefix>$&nbsp;</span>\\n            <span matSuffix>.00</span>\\n          </mat-form-field>\\n          \\n        </mat-expansion-panel> \\n      </mat-accordion> \\n\\n      <br>\\n\\n      <mat-accordion>\\n        <mat-expansion-panel>\\n          <mat-expansion-panel-header>\\n            <mat-panel-title>\\n              Editing Timeline\\n            </mat-panel-title>\\n            <mat-panel-description>\\n            </mat-panel-description>\\n          </mat-expansion-panel-header>\\n\\n\\n          <mat-form-field class=\\\"example-full-width\\\">\\n            <mat-select [(ngModel)]=\\\"docEditor\\\" name=\\\"docEditor\\\" placeholder=\\\"Manuscript Editor\\\">\\n              <mat-option *ngFor=\\\"let e of editors\\\" [value]=\\\"e\\\"> {{e}} </mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n\\n          <mat-form-field class=\\\"example-full-width\\\">\\n            <mat-select [(ngModel)]=\\\"docCoordinator\\\" name=\\\"docCoordinator\\\" placeholder=\\\"Manuscript Coordinator\\\">\\n            <mat-option *ngFor=\\\"let c of coordinators\\\" [value]=\\\"c\\\"> {{c}} </mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n\\n          <mat-form-field class=\\\"example-full-width\\\">\\n            <mat-select [(ngModel)]=\\\"docProofReader\\\" name=\\\"docProofReader\\\" placeholder=\\\"Manuscript Proofreader\\\">\\n            <mat-option *ngFor=\\\"let p of proofers\\\" [value]=\\\"p\\\"> {{p}} </mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n\\n          <mat-form-field class=\\\"example-full-width\\\">\\n            <mat-select [(ngModel)]=\\\"docSE1\\\" name=\\\"docSE1\\\" placeholder=\\\"SE1\\\">\\n            <mat-option *ngFor=\\\"let s of se1s\\\" [value]=\\\"s\\\"> {{s}} </mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n\\n          <mat-form-field class=\\\"example-full-width\\\">\\n            <input matInput [matDatepicker]=\\\"docEnteredDatePicker\\\" placeholder=\\\"Entered Date\\\" [(ngModel)]=\\\"docEnteredDate\\\" name=\\\"docEnteredDate\\\">\\n            <mat-datepicker-toggle matSuffix [for]=\\\"docEnteredDatePicker\\\"></mat-datepicker-toggle>\\n            <mat-datepicker #docEnteredDatePicker></mat-datepicker>\\n          </mat-form-field>\\n\\n          <mat-form-field class=\\\"example-full-width\\\">\\n            <input matInput [matDatepicker]=\\\"docCopyEditBeginDatePicker\\\" placeholder=\\\"Copyedit Begin Date\\\" [(ngModel)]=\\\"docCopyEditBeginDate\\\" name=\\\"docCopyEditBeginDate\\\">\\n            <mat-datepicker-toggle matSuffix [for]=\\\"docCopyEditBeginDatePicker\\\"></mat-datepicker-toggle>\\n            <mat-datepicker #docCopyEditBeginDatePicker></mat-datepicker>\\n          </mat-form-field>\\n\\n          <mat-form-field class=\\\"example-full-width\\\">\\n            <input matInput [matDatepicker]=\\\"docCopyEditCompleteDatePicker\\\" placeholder=\\\"Copyedit Complete Date\\\" [(ngModel)]=\\\"docCopyEditCompleteDate\\\" name=\\\"docCopyEditCompleteDate\\\">\\n            <mat-datepicker-toggle matSuffix [for]=\\\"docCopyEditCompleteDatePicker\\\"></mat-datepicker-toggle>\\n            <mat-datepicker #docCopyEditCompleteDatePicker></mat-datepicker>\\n          </mat-form-field>\\n\\n          <mat-form-field class=\\\"example-full-width\\\">\\n            <input matInput [matDatepicker]=\\\"docSendSEDatePicker\\\" placeholder=\\\"Send SE Date\\\" [(ngModel)]=\\\"docSendSEDate\\\" name=\\\"docSendSEDate\\\">\\n            <mat-datepicker-toggle matSuffix [for]=\\\"docSendSEDatePicker\\\"></mat-datepicker-toggle>\\n            <mat-datepicker #docSendSEDatePicker></mat-datepicker>\\n          </mat-form-field>\\n\\n          <mat-form-field class=\\\"example-full-width\\\">\\n            <input matInput [matDatepicker]=\\\"docReturnSEDatePicker\\\" placeholder=\\\"Return SE Date\\\" [(ngModel)]=\\\"docReturnSEDate\\\" name=\\\"docReturnSEDate\\\">\\n            <mat-datepicker-toggle matSuffix [for]=\\\"docReturnSEDatePicker\\\"></mat-datepicker-toggle>\\n            <mat-datepicker #docReturnSEDatePicker></mat-datepicker>\\n          </mat-form-field>\\n\\n          <mat-form-field class=\\\"example-full-width\\\">\\n            <input matInput [matDatepicker]=\\\"docFinalizeDatePicker\\\" placeholder=\\\"Finalize Date\\\" [(ngModel)]=\\\"docFinalizeDate\\\" name=\\\"docFinalizeDate\\\">\\n            <mat-datepicker-toggle matSuffix [for]=\\\"docFinalizeDatePicker\\\"></mat-datepicker-toggle>\\n            <mat-datepicker #docFinalizeDatePicker></mat-datepicker>\\n          </mat-form-field>\\n\\n          \\n        </mat-expansion-panel> \\n      </mat-accordion> \\n\\n      <br>\\n\\n\\n      <mat-accordion>\\n        <mat-expansion-panel>\\n          <mat-expansion-panel-header>\\n            <mat-panel-title>\\n              Online Issue \\n            </mat-panel-title>\\n            <mat-panel-description>\\n              \\n            </mat-panel-description>\\n          </mat-expansion-panel-header>\\n\\n          <mat-form-field class=\\\"example-full-width\\\">\\n            <mat-select [(ngModel)]=\\\"docOnlineIssue\\\" name=\\\"docOnlineIssue\\\" placeholder=\\\"Issue\\\">\\n              <mat-option *ngFor=\\\"let o of onlineIssues\\\" [value]=\\\"o\\\"> {{o}} </mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n\\n          <mat-form-field class=\\\"example-full-width\\\">\\n            <input type=\\\"number\\\" matInput [(ngModel)]=\\\"docFirstPageOnline\\\" name=\\\"docFirstPageOnline\\\" placeholder=\\\"Start Page\\\">\\n          </mat-form-field>\\n\\n          <mat-form-field class=\\\"example-full-width\\\">\\n            <input type=\\\"number\\\" matInput [(ngModel)]=\\\"docLastPageOnline\\\" name=\\\"docLastPageOnline\\\" placeholder=\\\"End Page\\\">\\n          </mat-form-field>\\n\\n          <mat-form-field class=\\\"example-full-width\\\">\\n            <input type=\\\"number\\\" matInput [(ngModel)]=\\\"docNumPagesOnline\\\" name=\\\"docNumPagesOnline\\\" placeholder=\\\"Number Online Pages\\\">\\n          </mat-form-field>\\n\\n          <mat-form-field class=\\\"example-full-width\\\">  \\n            <input type=\\\"text\\\" matInput placeholder=\\\"Notes\\\" [(ngModel)]=\\\"docOnlineNotes\\\" name=\\\"docOnlineNotes\\\">  \\n          </mat-form-field>  \\n\\n        </mat-expansion-panel> \\n      </mat-accordion>\\n\\n      <br>\\n\\n      <mat-accordion>\\n        <mat-expansion-panel>\\n          <mat-expansion-panel-header>\\n            <mat-panel-title>\\n              Print Issue \\n            </mat-panel-title>\\n            <mat-panel-description>\\n              \\n            </mat-panel-description>\\n          </mat-expansion-panel-header>\\n          <mat-form-field class=\\\"example-full-width\\\">\\n            <mat-select [(ngModel)]=\\\"docPrintIssue\\\" name=\\\"docPrintIssue\\\" placeholder=\\\"Date\\\">\\n              <mat-option *ngFor=\\\"let p of printIssues\\\" [value]=\\\"p\\\"> {{p}} </mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n          <mat-form-field class=\\\"example-full-width\\\">\\n            <input type=\\\"number\\\" matInput [(ngModel)]=\\\"docFirstPagePrint\\\" name=\\\"docFirstPagePrint\\\" placeholder=\\\"Start Page\\\">\\n          </mat-form-field>\\n\\n          <mat-form-field class=\\\"example-full-width\\\">\\n            <input type=\\\"number\\\" matInput [(ngModel)]=\\\"docLastPagePrint\\\" name=\\\"docLastPagePrint\\\" placeholder=\\\"End Page\\\">\\n          </mat-form-field>\\n          <mat-form-field class=\\\"example-full-width\\\">\\n            <input type=\\\"number\\\" matInput [(ngModel)]=\\\"docNumPagesPrint\\\" name=\\\"docNumPagesPrint\\\" placeholder=\\\"Number Print Pages\\\">\\n          </mat-form-field>\\n          <mat-form-field class=\\\"example-full-width\\\">  \\n            <input type=\\\"text\\\" matInput placeholder=\\\"Advertising Conflicts\\\" [(ngModel)]=\\\"docAdConflicts\\\" name=\\\"docAdConflicts\\\">  \\n          </mat-form-field>  \\n          <mat-form-field class=\\\"example-full-width\\\">  \\n            <input type=\\\"text\\\" matInput placeholder=\\\"Notes\\\" [(ngModel)]=\\\"docPrintNotes\\\" name=\\\"docPrintNotes\\\">  \\n          </mat-form-field>  \\n        </mat-expansion-panel> \\n      </mat-accordion>\\n\\n      <br>\\n\\n      <mat-accordion>\\n        <mat-expansion-panel>\\n          <mat-expansion-panel-header>\\n            <mat-panel-title>\\n              News \\n            </mat-panel-title>\\n            <mat-panel-description>\\n              \\n            </mat-panel-description>\\n          </mat-expansion-panel-header>\\n\\n          <mat-form-field class=\\\"example-full-width\\\">\\n            <mat-select [(ngModel)]=\\\"docNewsAuthorType\\\" name=\\\"docNewsAuthorType\\\" placeholder=\\\"Author Type\\\">\\n              <mat-option *ngFor=\\\"let a of authortypes\\\" [value]=\\\"a\\\"> {{a}} </mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n\\n          <mat-form-field class=\\\"example-full-width\\\">\\n            <input matInput [matDatepicker]=\\\"docPublishDateCMAJnewsPicker\\\" placeholder=\\\"Date Posted on cmajnews.com\\\" [(ngModel)]=\\\"docPublishDateCMAJnews\\\" name=\\\"docPublishDateCMAJnews\\\">\\n            <mat-datepicker-toggle matSuffix [for]=\\\"docPublishDateCMAJnewsPicker\\\"></mat-datepicker-toggle>\\n            <mat-datepicker #docPublishDateCMAJnewsPicker></mat-datepicker>\\n          </mat-form-field>\\n\\n          <mat-form-field class=\\\"example-full-width\\\">\\n            <input matInput [matDatepicker]=\\\"docNewsCommissionDatePicker\\\" placeholder=\\\"Commission Date\\\" [(ngModel)]=\\\"docNewsCommissionDate\\\" name=\\\"docNewsCommissionDate\\\">\\n            <mat-datepicker-toggle matSuffix [for]=\\\"docNewsCommissionDatePicker\\\"></mat-datepicker-toggle>\\n            <mat-datepicker #docNewsCommissionDatePicker></mat-datepicker>\\n          </mat-form-field>\\n\\n          <mat-form-field class=\\\"example-full-width\\\">\\n            <input matInput [matDatepicker]=\\\"docNewsInvoiceDatePicker\\\" placeholder=\\\"Invoice Date\\\" [(ngModel)]=\\\"docNewsInvoiceDate\\\" name=\\\"docNewsInvoiceDate\\\">\\n            <mat-datepicker-toggle matSuffix [for]=\\\"docNewsInvoiceDatePicker\\\"></mat-datepicker-toggle>\\n            <mat-datepicker #docNewsInvoiceDatePicker></mat-datepicker>\\n          </mat-form-field>\\n\\n          <mat-form-field class=\\\"example-full-width\\\">\\n            <input type=\\\"number\\\" matInput [(ngModel)]=\\\"docNewsInvoiceAmount\\\" name=\\\"docNewsInvoiceAmount\\\" placeholder=\\\"Invoice Amount\\\">\\n            <span matPrefix>$&nbsp;</span>\\n            <span matSuffix>.00</span>\\n          </mat-form-field>\\n          \\n        </mat-expansion-panel> \\n      </mat-accordion>\\n\\n    <br>\\n      \\n    <button mat-raised-button type=\\\"submit\\\">Submit</button>\\n\\n    </form>  \\n  </section>\\n</div>\\n</div>\\n\\n  \\n\"","import { Component, OnInit } from '@angular/core';\nimport {AuthService} from '../services/auth.service';\nimport {Router} from '@angular/router';\nimport {ActivatedRoute} from '@angular/router';\nconst config = require('../../../../../config/docs');\n\n@Component({\n  selector: 'app-details',\n  templateUrl: './details.component.html',\n  styleUrls: ['./details.component.css']\n})\nexport class DetailsComponent implements OnInit {\n  private sub: any;\n  detailsID: String;\t\n  username: String; //currently logged in user\n  oneDoc: Object;\n  editDoc: Boolean = false;\n  showNews: Boolean = false;\n  docUsername: String; //user who entered document originally\n  docID: String; //unique ID for database entry\n\n  //from config\n  sections: [String]; \n  onlineIssues: [String]; \n  printIssues: [String]; \n  collectionCodes: [String]; \n  authortypes: [String]; \n  editors: [String]; \n  coordinators: [String]; \n  proofers: [String]; \n  se1s: [String]; \n\n  //Same as in Enter Document Component\n    //GENERAL FIELDS\n  docTitle: String;\n  docAuthor: String;\n  docDOI: Number;\n  docSection: String;\n  docDescription: String;\n  docCollectionCode1: String;\n  docCollectionCode2: String;\n  docCollectionCode3: String;\n  docCollectionCode4: String;\n  docAuthorType: String;\n  docCommissionDate: Date;\n  docInvoiceDate: Date;\n  docInvoiceAmount: Number;\n\n  //TIMELINE\n\n  docAcceptDate: Date;\n  docPublishDate: Date;\n  docETOCDate: Date;\n  docEnteredDate: Date;\n  docCopyEditBeginDate: Date;\n  docCopyEditCompleteDate: Date;\n  docSendSEDate: Date;\n  docReturnSEDate: Date;\n  docSendAuthorDate: Date;\n  docReturnAuthorDate: Date;\n  docFinalizeDate: Date;\n  docPaymentDate: Date;\n\n  //EDITORS\n  docEditor: String;\n  docCoordinator: String;\n  docProofReader: String;\n  docSE1: String;\n  docSE2: String;\n\n  //YES OR NO FIELDS\n  docOpenAccess: Boolean; \n  docTranslation: Boolean;\n  \n  //ONLINE ISSUE\n\n  docOnlineIssue: String;\n  docFirstPageOnline: Number;\n  docLastPageOnline: Number;\n  docNumPagesOnline: Number;\n  docOnlineNotes: String;\n\n  //PRINT ISSUE\n\n  docPrintIssue: String;\n  docFirstPagePrint: Number;\n  docLastPagePrint: Number;\n  docNumPagesPrint: Number;\n  docPrintNotes: String;\n  docAdConflicts: String;\n\n  //NEWS ONLY\n  docPublishDateCMAJnews: Date; \n  docNewsAuthorType: String;\n  docNewsCommissionDate: Date;\n  docNewsInvoiceDate: Date;\n  docNewsInvoiceAmount: Number;\n\n  //FORMATTED DATES FOR DISPLAY\n  docCommissionDateFormatted: String;\n  docInvoiceDateFormatted: String;\n  docAcceptDateFormatted: String;\n  docPublishDateFormatted: String;\n  docETOCDateFormatted: String;\n  docPaymentDateFormatted: String;\n  docEnteredDateFormatted: String;\n  docCopyEditBeginDateFormatted: String;\n  docCopyEditCompleteDateFormatted: String;\n  docSendSEDateFormatted: String;\n  docReturnSEDateFormatted: String;\n  docSendAuthorDateFormatted: String;\n  docReturnAuthorDateFormatted: String;\n  docFinalizeDateFormatted: String;\n  docPublishDateCMAJnewsFormatted: String; \n  docNewsCommissionDateFormatted: String;\n  docNewsInvoiceDateFormatted: String;\n\n  constructor(\n  \tprivate route: ActivatedRoute,\n    private authService: AuthService,\n    private router: Router\n    ) { } \n\n    ngOnInit() {\n\n    this.editDoc = false;\n\n    this.sections = config.sections;\n    this.onlineIssues = config.onlineIssues;\n    this.printIssues = config.printIssues;\n    this.collectionCodes = config.collectionCodes;\n    this.editors = config.editors;\n    this.coordinators = config.coordinators;\n    this.proofers = config.proofers;\n    this.se1s = config.se1s;\n    this.authortypes = config.authortypes;\n\n    this.route.params.subscribe(params => {\n      this.detailsID = params['doc'];\n      }\n    );\n\n    this.authService.getOneDoc(this.detailsID).subscribe(doc => {\n      this.oneDoc = doc; \n      this.docID = doc._id;\n\n      if(doc.docSection == \"News\") {\n        this.showNews = true;\n      }\n\n      //GENERAL FIELDS\n      this.docTitle = doc.docTitle;\n      this.docAuthor = doc.docAuthor;\n      this.docDOI = doc.docDOI;\n      this.docSection = doc.docSection;\n      this.docDescription = doc.docDescription;\n      this.docCollectionCode1 = doc.docCollectionCode1;\n      this.docCollectionCode2 = doc.docCollectionCode2;\n      this.docCollectionCode3 = doc.docCollectionCode3;\n      this.docCollectionCode4 = doc.docCollectionCode4;\n      this.docAuthorType = doc.docAuthorType;\n      this.docCommissionDate = doc.docCommissionDate;\n      this.docCommissionDateFormatted = doc.docCommissionDateFormatted;\n      this.docInvoiceDate = doc.docInvoiceDate;\n      this.docInvoiceDateFormatted = doc.docInvoiceDateFormatted;\n      this.docInvoiceAmount = doc.docInvoiceAmount;\n\n      //TIMELINE\n\n      this.docAcceptDate = doc.docAcceptDate;\n      this.docAcceptDateFormatted = doc.docAcceptDateFormatted;\n      this.docPublishDate = doc.docPublishDate;\n      this.docPublishDateFormatted = doc.docPublishDateFormatted;\n      this.docETOCDate = doc.docETOCDate;\n      this.docETOCDateFormatted = doc.docETOCDateFormatted;\n      this.docEnteredDate = doc.docEnteredDate;\n      this.docEnteredDateFormatted = doc.docEnteredDateFormatted;\n      this.docCopyEditBeginDate = doc.docCopyEditBeginDate;\n      this.docCopyEditBeginDateFormatted = doc.docCopyEditBeginDateFormatted;\n      this.docCopyEditCompleteDate = doc.docCopyEditCompleteDate;\n      this.docCopyEditCompleteDateFormatted = doc.docCopyEditCompleteDateFormatted;\n      this.docSendSEDate = doc.docSendSEDate;\n      this.docSendSEDateFormatted = doc.docSendSEDateFormatted;\n      this.docReturnSEDate = doc.docReturnSEDate;\n      this.docReturnSEDateFormatted = doc.docReturnSEDateFormatted;\n      this.docSendAuthorDate = doc.docSendAuthorDate;\n      this.docSendAuthorDateFormatted = doc.docSendAuthorDateFormatted\n      this.docReturnAuthorDate = doc.docReturnAuthorDate;\n      this.docReturnAuthorDateFormatted = doc.docReturnAuthorDateFormatted\n      this.docFinalizeDate = doc.docFinalizeDate;\n      this.docFinalizeDateFormatted = doc.docFinalizeDateFormatted\n      this.docPaymentDate = doc.docPaymentDate;\n      this.docPaymentDateFormatted = doc.docPaymentDateFormatted;\n \n      //EDITORS\n      this.docEditor = doc.docEditor;\n      this.docCoordinator = doc.docCoordinator;\n      this.docProofReader = doc.docProofReader;\n      this.docSE1 = doc.docSE1;\n      this.docSE2 = doc.docSE2;\n  \n      //YES OR NO FIELDS\n      this.docOpenAccess = doc.docOpenAccess; \n      this.docTranslation = doc.docTranslation;\n    \n      //ONLINE ISSUE\n  \n      this.docOnlineIssue = doc.docOnlineIssue;\n      this.docFirstPageOnline = doc.docFirstPageOnline;\n      this.docLastPageOnline = doc.docLastPageOnline;\n      this.docNumPagesOnline = doc.docNumPagesOnline;\n      this.docOnlineNotes = doc.docOnlineNotes;\n  \n      //PRINT ISSUE\n  \n      this.docPrintIssue = doc.docPrintIssue;\n      this.docFirstPagePrint = doc.docFirstPagePrint;\n      this.docLastPagePrint = doc.docLastPagePrint;\n      this.docNumPagesPrint = doc.docNumPagesPrint;\n      this.docPrintNotes = doc.docPrintNotes;\n      this.docAdConflicts = doc.docAdConflicts;\n  \n      //NEWS ONLY\n      this.docPublishDateCMAJnews = doc.docPublishDateCMAJnews;\n      this.docPublishDateCMAJnewsFormatted = doc.docPublishDateCMAJnewsFormatted;\n      this.docNewsAuthorType = doc.docNewsAuthorType;\n      this.docNewsCommissionDate = doc.docNewsCommissionDate;\n      this.docNewsCommissionDateFormatted = doc.docNewsCommissionDateFormatted;\n      this.docNewsInvoiceDate = doc.docNewsInvoiceDate;\n      this.docNewsInvoiceDateFormatted = doc.docNewsInvoiceDateFormatted;\n      this.docNewsInvoiceAmount = doc.docNewsInvoiceAmount;\n    },\n    err => {\n      console.log(err);\n      return false;\n    });\n\n\n  }\n\n  onDeleteDocSubmit() {\n    this.authService.deleteOneDoc(this.docID).subscribe(doc => {\n    },\n    err => {\n      console.log(err);\n      return false;\n    });\n    this.router.navigate(['/search']);\n  }\n\n  onEditDocSubmit() {\n    this.editDoc = true;\n  }\n\n  onEditedDocSubmit() {\n    let editedDoc = {\n \n      docID: this.docID, //to identify this doc in database\n      \n      docTitle: this.docTitle,\n      docAuthor: this.docAuthor,\n      docDOI: this.docDOI,\n      docSection: this.docSection,\n      docDescription: this.docDescription,\n      docCollectionCode1: this.docCollectionCode1,\n      docCollectionCode2: this.docCollectionCode2,\n      docCollectionCode3: this.docCollectionCode3,\n      docCollectionCode4: this.docCollectionCode4,    \n      docAuthorType: this.docAuthorType,\n      docCommissionDate: this.docCommissionDate,\n      docInvoiceDate: this.docInvoiceDate,\n      docInvoiceAmount: this.docInvoiceAmount,\n\n      //TIMELINE\n      docAcceptDate: this.docAcceptDate,\n      docPublishDate: this.docPublishDate,\n      docETOCDate: this.docETOCDate,\n      docEnteredDate: this.docEnteredDate,\n      docCopyEditBeginDate: this.docCopyEditBeginDate,\n      docCopyEditCompleteDate: this.docCopyEditCompleteDate,\n      docSendSEDate: this.docSendSEDate,\n      docReturnSEDate: this.docReturnSEDate, \n      docSendAuthorDate: this.docSendAuthorDate,\n      docReturnAuthorDate: this.docReturnAuthorDate,\n      docFinalizeDate: this.docFinalizeDate, \n\n      //EDITORS\n      docEditor: this.docEditor,\n      docCoordinator: this.docCoordinator,\n      docProofReader: this.docProofReader,\n      docSE1: this.docSE1,\n      docSE2: this.docSE2,  \n\n      //YES OR NO FIELDS\n      docOpenAccess: this.docOpenAccess,\n      docTranslation: this.docTranslation,\n\n      //ONLINE ISSUE\n\n      docOnlineIssue: this.docOnlineIssue,\n      docFirstPageOnline: this.docFirstPageOnline,\n      docLastPageOnline: this.docLastPageOnline,\n      docNumPagesOnline: this.docNumPagesOnline,\n      docOnlineNotes: this.docOnlineNotes,\n\n      //PRINT ISSUE\n\n      docPrintIssue: this.docPrintIssue,\n      docFirstPagePrint: this.docFirstPagePrint,\n      docLastPagePrint: this.docLastPagePrint,\n      docNumPagesPrint: this.docNumPagesPrint,\n      docPrintNotes: this.docPrintNotes,\n      docAdConflicts: this.docAdConflicts,\n\n      //NEWS ONLY\n\n      docPublishDateCMAJnews: this.docPublishDateCMAJnews,\n      docNewsAuthorType: this.docNewsAuthorType,\n      docNewsCommissionDate: this.docNewsCommissionDate,\n      docNewsInvoiceDate: this.docNewsInvoiceDate,\n      docNewsInvoiceAmount: this.docNewsInvoiceAmount\n    }\n\n\n    //ADD FORMATTED DATES IF DATES ENTERED\n    if(this.docCommissionDate)\n      editedDoc['docCommissionDateFormatted'] = this.formatDate(new Date(this.docCommissionDate));\n    if(this.docInvoiceDate)\n      editedDoc['docInvoiceDateFormatted'] = this.formatDate(new Date(this.docInvoiceDate)); \n    if(this.docAcceptDate)\n      editedDoc['docAcceptDateFormatted'] = this.formatDate(new Date(this.docAcceptDate)); \n    if(this.docPublishDate)\n      editedDoc['docPublishDateFormatted'] = this.formatDate(new Date(this.docPublishDate)); \n    if(this.docETOCDate)\n      editedDoc['docETOCDateFormatted'] = this.formatDate(new Date(this.docETOCDate)); \n    if(this.docPaymentDate)\n      editedDoc['docPaymentDateFormatted'] = this.formatDate(new Date(this.docPaymentDate)); \n    if(this.docEnteredDate)\n      editedDoc['docEnteredDateFormatted'] = this.formatDate(new Date(this.docEnteredDate)); \n    if(this.docCopyEditBeginDate)\n      editedDoc['docCopyEditBeginDateFormatted'] = this.formatDate(new Date(this.docCopyEditBeginDate)); \n    if(this.docCopyEditCompleteDate)\n      editedDoc['docCopyEditCompleteDateFormatted'] = this.formatDate(new Date(this.docCopyEditCompleteDate)); \n    if(this.docSendSEDate)\n      editedDoc['docSendSEDateFormatted'] = this.formatDate(new Date(this.docSendSEDate)); \n    if(this.docReturnSEDate)\n      editedDoc['docReturnSEDateFormatted'] = this.formatDate(new Date(this.docReturnSEDate)); \n    if(this.docSendAuthorDate)\n      editedDoc['docSendAuthorDateFormatted'] = this.formatDate(new Date(this.docSendAuthorDate)); \n    if(this.docReturnAuthorDate)\n      editedDoc['docReturnAuthorDateFormatted'] = this.formatDate(new Date(this.docReturnAuthorDate)); \n    if(this.docFinalizeDate)\n      editedDoc['docFinalizeDateFormatted'] = this.formatDate(new Date(this.docFinalizeDate)); \n    if(this.docPublishDateCMAJnews)\n      editedDoc['docPublishDateCMAJnewsFormatted'] = this.formatDate(new Date(this.docPublishDateCMAJnews)); \n    if(this.docNewsCommissionDate)\n      editedDoc['docNewsCommissionDateFormatted'] = this.formatDate(new Date(this.docNewsCommissionDate)); \n    if(this.docNewsInvoiceDate)\n      editedDoc['docNewsInvoiceDateFormatted'] = this.formatDate(new Date(this.docNewsInvoiceDate)); \n\n\n    console.log(editedDoc);\n\n    this.authService.putUpdateDoc(editedDoc).subscribe(doc => {\n    },\n    err => {\n      console.log(err);\n      return false;\n    });\n    this.router.navigate(['/search']);\n  }\n\n  formatDate(date) {\n    const monthNames = [\n      \"January\", \"February\", \"March\",\n      \"April\", \"May\", \"June\", \"July\",\n      \"August\", \"September\", \"October\",\n      \"November\", \"December\"\n    ];\n    const year = date.getFullYear();\n    const month = date.getMonth();\n    const day = date.getDate();\n    return (monthNames[month] + \" \" + day + \", \" + year);\n  }\n\n\n\n}\n","module.exports = \".example-form {  \\n  min-width: 150px;  \\n  max-width: 500px;  \\n  width: 100%;  \\n}  \\n  \\n.example-full-width {  \\n  width: 100%;  \\n}  \\n  \\n.align-form {\\n  flex: 1 1 auto;\\n  margin-left: 50px;\\n  margin-top: 50px;\\n}  \\n  \\n.example-margin {\\n  margin: 0 10px;\\n}  \\n  \\n.example-section {\\n  display: flex;\\n  align-content: center;\\n  align-items: center;\\n  height: 60px;\\n}  \\n  \\n.mat-form-field--no-underline .mat-input-underline {\\n  display: none; \\n}\\n\\n\\n\"","module.exports = \"<div class = \\\"align-form\\\">\\n\\n  <section class = \\\"mat-typography\\\">\\n\\n    <h4>Welcome {{username}}</h4> \\n\\n    <h2>Enter Document</h2>\\n\\n    <form (submit)=\\\"onDocSubmit()\\\" class=\\\"example-form\\\">  \\n\\n\\n      <!-- Automatically Generate DOI for News articles-->\\n      <div *ngIf=\\\"showNews\\\">\\n        Section: News\\n        <br><br>\\n         DOI: {{docDOI}}\\n        <br><br>\\n      </div>\\n\\n      <!--Input Title and Author for all manuscripts-->\\n      <mat-form-field class=\\\"example-full-width\\\">  \\n        <input type=\\\"text\\\" matInput placeholder=\\\"Title\\\" [(ngModel)]=\\\"docTitle\\\" name=\\\"docTitle\\\">  \\n      </mat-form-field>  \\n      <mat-form-field class=\\\"example-full-width\\\">  \\n        <input type=\\\"text\\\" matInput placeholder=\\\"Author\\\" [(ngModel)]=\\\"docAuthor\\\" name=\\\"docAuthor\\\">\\n      </mat-form-field>  \\n\\n      <div *ngIf=\\\"showNews\\\">\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <input matInput [matDatepicker]=\\\"docPublishDateCMAJnewsDatePicker\\\" placeholder=\\\"Date Posted on cmajnews.com\\\" [(ngModel)]=\\\"docPublishDateCMAJnews\\\" name=\\\"docPublishDateCMAJnews\\\">\\n          <mat-datepicker-toggle matSuffix [for]=\\\"docPublishDateCMAJnewsDatePicker\\\"></mat-datepicker-toggle>\\n          <mat-datepicker #docPublishDateCMAJnewsDatePicker></mat-datepicker>\\n        </mat-form-field>\\n      </div>\\n\\n      <mat-form-field class=\\\"example-full-width\\\">\\n        <input matInput [matDatepicker]=\\\"docETOCDatePicker\\\" placeholder=\\\"eTOC Date\\\" [(ngModel)]=\\\"docETOCDate\\\" name=\\\"docETOCDate\\\">\\n          <mat-datepicker-toggle matSuffix [for]=\\\"docETOCDatePicker\\\"></mat-datepicker-toggle>\\n          <mat-datepicker #docETOCDatePicker></mat-datepicker>\\n      </mat-form-field>\\n\\n      <!--input DOI and section for all non-News manuscripts-->\\n      <div *ngIf=\\\"!showNews\\\">\\n        <mat-form-field class=\\\"example-full-width\\\">  \\n          <input type=\\\"number\\\" matInput placeholder=\\\"DOI\\\" [(ngModel)]=\\\"docDOI\\\" name=\\\"docDOI\\\">\\n        </mat-form-field>  \\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <mat-select [(ngModel)]=\\\"docSection\\\" name=\\\"docSection\\\" placeholder=\\\"Section\\\">\\n            <mat-option *ngFor=\\\"let s of sections\\\" [value]=\\\"s\\\"> {{s}} </mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n      </div>\\n\\n      <!--Select Collection Codes for all manuscripts-->\\n      <mat-accordion>\\n        <mat-expansion-panel>\\n          <mat-expansion-panel-header>\\n            <mat-panel-title>\\n              Collection Codes \\n            </mat-panel-title>\\n            <mat-panel-description>\\n              \\n            </mat-panel-description>\\n          </mat-expansion-panel-header>\\n          <mat-form-field class=\\\"example-full-width\\\">\\n            <mat-select [(ngModel)]=\\\"docCollectionCode1\\\" name=\\\"docCollectionCode1\\\" placeholder=\\\"Collection Code 1\\\">\\n              <mat-option *ngFor=\\\"let c of collectionCodes\\\" [value]=\\\"c\\\"> {{c}} </mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n \\n          <mat-form-field class=\\\"example-full-width\\\">\\n            <mat-select [(ngModel)]=\\\"docCollectionCode2\\\" name=\\\"docCollectionCode2\\\" placeholder=\\\"Collection Code 2\\\">\\n              <mat-option *ngFor=\\\"let c of collectionCodes\\\" [value]=\\\"c\\\"> {{c}} </mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n\\n          <mat-form-field class=\\\"example-full-width\\\">\\n            <mat-select [(ngModel)]=\\\"docCollectionCode3\\\" name=\\\"docCollectionCode3\\\" placeholder=\\\"Collection Code 3\\\">\\n              <mat-option *ngFor=\\\"let c of collectionCodes\\\" [value]=\\\"c\\\"> {{c}} </mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n\\n          <mat-form-field class=\\\"example-full-width\\\">\\n            <mat-select [(ngModel)]=\\\"docCollectionCode4\\\" name=\\\"docCollectionCode4\\\" placeholder=\\\"Collection Code 4\\\">\\n              <mat-option *ngFor=\\\"let c of collectionCodes\\\" [value]=\\\"c\\\"> {{c}} </mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n\\n        </mat-expansion-panel> \\n      </mat-accordion>\\n\\n      <br>\\n\\n      <!--Show freelancer input fields for News manuscripts-->\\n      <div *ngIf=\\\"showNews\\\">\\n        <mat-accordion>\\n          <mat-expansion-panel>\\n            <mat-expansion-panel-header>\\n              <mat-panel-title>\\n                Freelance \\n            </mat-panel-title>\\n              <mat-panel-description>\\n              </mat-panel-description>\\n            </mat-expansion-panel-header>\\n            <mat-form-field class=\\\"example-full-width\\\">\\n              <input matInput [matDatepicker]=\\\"docNewsCommissionDatePicker\\\" placeholder=\\\"Commission Date\\\" [(ngModel)]=\\\"docNewsCommissionDate\\\" name=\\\"docNewsCommissionDate\\\">\\n              <mat-datepicker-toggle matSuffix [for]=\\\"docNewsCommissionDatePicker\\\"></mat-datepicker-toggle>\\n              <mat-datepicker #docNewsCommissionDatePicker></mat-datepicker>\\n            </mat-form-field>\\n            <mat-form-field class=\\\"example-full-width\\\">\\n              <input matInput [matDatepicker]=\\\"docNewsInvoiceDatePicker\\\" placeholder=\\\"Invoice Date\\\" [(ngModel)]=\\\"docNewsInvoiceDate\\\" name=\\\"docNewsInvoiceDate\\\">\\n              <mat-datepicker-toggle matSuffix [for]=\\\"docNewsInvoiceDatePicker\\\"></mat-datepicker-toggle>\\n              <mat-datepicker #docNewsInvoiceDatePicker></mat-datepicker>\\n            </mat-form-field>\\n            <mat-form-field class=\\\"example-full-width\\\">\\n              <input type=\\\"number\\\" matInput [(ngModel)]=\\\"docNewsInvoiceAmount\\\" name=\\\"docNewsInvoiceAmount\\\" placeholder=\\\"Invoice Amount\\\">\\n              <span matPrefix>$&nbsp;</span>\\n              <span matSuffix>.00</span>\\n            </mat-form-field>\\n        </mat-expansion-panel> \\n      </mat-accordion>\\n      <br>\\n      </div>\\n\\n\\n      <div *ngIf=\\\"!showNews\\\">\\n\\n      <mat-accordion>\\n        <mat-expansion-panel>\\n          <mat-expansion-panel-header>\\n            <mat-panel-title>\\n              Document Details  \\n            </mat-panel-title>\\n            <mat-panel-description>\\n            </mat-panel-description>\\n          </mat-expansion-panel-header>\\n\\n          <mat-form-field floatPlaceholder=\\\"always\\\" class=\\\"mat-form-field--no-underline example-full-width\\\">\\n            <input matInput placeholder=\\\"\\\" style=\\\"display: none\\\">\\n              <mat-checkbox [(ngModel)]=\\\"docOpenAccess\\\" name=\\\"docOpenAccess\\\">Open Access</mat-checkbox>\\n          </mat-form-field>\\n\\n          <mat-form-field floatPlaceholder=\\\"always\\\" class=\\\"mat-form-field--no-underline example-full-width\\\">\\n            <input matInput placeholder=\\\"\\\" style=\\\"display: none\\\">\\n              <mat-checkbox [(ngModel)]=\\\"docTranslation\\\" name=\\\"docTranslation\\\">Translation</mat-checkbox>\\n          </mat-form-field>\\n\\n          <mat-form-field class=\\\"example-full-width\\\">\\n            <input matInput [matDatepicker]=\\\"docCommisionDatePicker\\\" placeholder=\\\"Commission Date\\\" [(ngModel)]=\\\"docCommissionDate\\\" name=\\\"docCommissionDate\\\">\\n            <mat-datepicker-toggle matSuffix [for]=\\\"docCommisionDatePicker\\\"></mat-datepicker-toggle>\\n            <mat-datepicker #docCommisionDatePicker></mat-datepicker>\\n          </mat-form-field>\\n\\n          <mat-form-field class=\\\"example-full-width\\\">\\n            <input matInput [matDatepicker]=\\\"docAcceptDatePicker\\\" placeholder=\\\"Accept Date\\\" [(ngModel)]=\\\"docAcceptDate\\\" name=\\\"docAcceptDate\\\">\\n            <mat-datepicker-toggle matSuffix [for]=\\\"docAcceptDatePicker\\\"></mat-datepicker-toggle>\\n            <mat-datepicker #docAcceptDatePicker></mat-datepicker>\\n          </mat-form-field>\\n\\n          <mat-form-field class=\\\"example-full-width\\\">\\n            <input matInput [matDatepicker]=\\\"docPaymentDatePicker\\\" placeholder=\\\"Payment Date\\\" [(ngModel)]=\\\"docPaymentDate\\\" name=\\\"docPaymentDate\\\">\\n            <mat-datepicker-toggle matSuffix [for]=\\\"docPaymentDatePicker\\\"></mat-datepicker-toggle>\\n            <mat-datepicker #docPaymentDatePicker></mat-datepicker>\\n          </mat-form-field>\\n\\n          <mat-form-field class=\\\"example-full-width\\\">\\n            <input matInput [matDatepicker]=\\\"docPublishDatePicker\\\" placeholder=\\\"Publish Date\\\" [(ngModel)]=\\\"docPublishDate\\\" name=\\\"docPublishDate\\\">\\n            <mat-datepicker-toggle matSuffix [for]=\\\"docPublishDatePicker\\\"></mat-datepicker-toggle>\\n            <mat-datepicker #docPublishDatePicker></mat-datepicker>\\n          </mat-form-field>\\n\\n          <mat-form-field class=\\\"example-full-width\\\">\\n            <input matInput [matDatepicker]=\\\"docInvoiceDatePicker\\\" placeholder=\\\"Invoice Date\\\" [(ngModel)]=\\\"docInvoiceDate\\\" name=\\\"docInvoiceDate\\\">\\n            <mat-datepicker-toggle matSuffix [for]=\\\"docInvoiceDatePicker\\\"></mat-datepicker-toggle>\\n            <mat-datepicker #docInvoiceDatePicker></mat-datepicker>\\n          </mat-form-field>\\n\\n          <mat-form-field class=\\\"example-full-width\\\">\\n            <input type=\\\"number\\\" matInput [(ngModel)]=\\\"docInvoiceAmount\\\" name=\\\"docInvoiceAmount\\\" placeholder=\\\"Invoice Amount\\\">\\n            <span matPrefix>$&nbsp;</span>\\n            <span matSuffix>.00</span>\\n          </mat-form-field>\\n          \\n        </mat-expansion-panel> \\n      </mat-accordion> \\n\\n      <br>\\n\\n      </div>\\n\\n\\n      <div *ngIf=\\\"!showNews\\\">\\n\\n      <mat-accordion>\\n        <mat-expansion-panel>\\n          <mat-expansion-panel-header>\\n            <mat-panel-title>\\n              Editing Timeline\\n            </mat-panel-title>\\n            <mat-panel-description>\\n            </mat-panel-description>\\n          </mat-expansion-panel-header>\\n\\n\\n          <mat-form-field class=\\\"example-full-width\\\">\\n            <mat-select [(ngModel)]=\\\"docEditor\\\" name=\\\"docEditor\\\" placeholder=\\\"Manuscript Editor\\\">\\n              <mat-option *ngFor=\\\"let e of editors\\\" [value]=\\\"e\\\"> {{e}} </mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n\\n          <mat-form-field class=\\\"example-full-width\\\">\\n            <mat-select [(ngModel)]=\\\"docCoordinator\\\" name=\\\"docCoordinator\\\" placeholder=\\\"Manuscript Coordinator\\\">\\n            <mat-option *ngFor=\\\"let c of coordinators\\\" [value]=\\\"c\\\"> {{c}} </mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n\\n          <mat-form-field class=\\\"example-full-width\\\">\\n            <mat-select [(ngModel)]=\\\"docProofReader\\\" name=\\\"docProofReader\\\" placeholder=\\\"Manuscript Proofreader\\\">\\n            <mat-option *ngFor=\\\"let p of proofers\\\" [value]=\\\"p\\\"> {{p}} </mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n\\n          <mat-form-field class=\\\"example-full-width\\\">\\n            <mat-select [(ngModel)]=\\\"docSE1\\\" name=\\\"docSE1\\\" placeholder=\\\"SE1\\\">\\n            <mat-option *ngFor=\\\"let s of se1s\\\" [value]=\\\"s\\\"> {{s}} </mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n\\n          <mat-form-field class=\\\"example-full-width\\\">\\n            <input matInput [matDatepicker]=\\\"docEnteredDatePicker\\\" placeholder=\\\"Entered Date\\\" [(ngModel)]=\\\"docEnteredDate\\\" name=\\\"docEnteredDate\\\">\\n            <mat-datepicker-toggle matSuffix [for]=\\\"docEnteredDatePicker\\\"></mat-datepicker-toggle>\\n            <mat-datepicker #docEnteredDatePicker></mat-datepicker>\\n          </mat-form-field>\\n\\n          <mat-form-field class=\\\"example-full-width\\\">\\n            <input matInput [matDatepicker]=\\\"docCopyEditBeginDatePicker\\\" placeholder=\\\"Copyedit Begin Date\\\" [(ngModel)]=\\\"docCopyEditBeginDate\\\" name=\\\"docCopyEditBeginDate\\\">\\n            <mat-datepicker-toggle matSuffix [for]=\\\"docCopyEditBeginDatePicker\\\"></mat-datepicker-toggle>\\n            <mat-datepicker #docCopyEditBeginDatePicker></mat-datepicker>\\n          </mat-form-field>\\n\\n          <mat-form-field class=\\\"example-full-width\\\">\\n            <input matInput [matDatepicker]=\\\"docCopyEditCompleteDatePicker\\\" placeholder=\\\"Copyedit Complete Date\\\" [(ngModel)]=\\\"docCopyEditCompleteDate\\\" name=\\\"docCopyEditCompleteDate\\\">\\n            <mat-datepicker-toggle matSuffix [for]=\\\"docCopyEditCompleteDatePicker\\\"></mat-datepicker-toggle>\\n            <mat-datepicker #docCopyEditCompleteDatePicker></mat-datepicker>\\n          </mat-form-field>\\n\\n          <mat-form-field class=\\\"example-full-width\\\">\\n            <input matInput [matDatepicker]=\\\"docSendSEDatePicker\\\" placeholder=\\\"Send SE Date\\\" [(ngModel)]=\\\"docSendSEDate\\\" name=\\\"docSendSEDate\\\">\\n            <mat-datepicker-toggle matSuffix [for]=\\\"docSendSEDatePicker\\\"></mat-datepicker-toggle>\\n            <mat-datepicker #docSendSEDatePicker></mat-datepicker>\\n          </mat-form-field>\\n\\n          <mat-form-field class=\\\"example-full-width\\\">\\n            <input matInput [matDatepicker]=\\\"docReturnSEDatePicker\\\" placeholder=\\\"Return SE Date\\\" [(ngModel)]=\\\"docReturnSEDate\\\" name=\\\"docReturnSEDate\\\">\\n            <mat-datepicker-toggle matSuffix [for]=\\\"docReturnSEDatePicker\\\"></mat-datepicker-toggle>\\n            <mat-datepicker #docReturnSEDatePicker></mat-datepicker>\\n          </mat-form-field>\\n\\n          <mat-form-field class=\\\"example-full-width\\\">\\n            <input matInput [matDatepicker]=\\\"docFinalizeDatePicker\\\" placeholder=\\\"Finalize Date\\\" [(ngModel)]=\\\"docFinalizeDate\\\" name=\\\"docFinalizeDate\\\">\\n            <mat-datepicker-toggle matSuffix [for]=\\\"docFinalizeDatePicker\\\"></mat-datepicker-toggle>\\n            <mat-datepicker #docFinalizeDatePicker></mat-datepicker>\\n          </mat-form-field>\\n\\n        </mat-expansion-panel> \\n      </mat-accordion> \\n\\n      <br>\\n\\n      </div>\\n\\n      <mat-accordion>\\n        <mat-expansion-panel>\\n          <mat-expansion-panel-header>\\n            <mat-panel-title>\\n              Online Issue \\n            </mat-panel-title>\\n            <mat-panel-description>\\n            </mat-panel-description>\\n          </mat-expansion-panel-header>\\n          <mat-form-field class=\\\"example-full-width\\\">\\n            <mat-select [(ngModel)]=\\\"docOnlineIssue\\\" name=\\\"docOnlineIssue\\\" placeholder=\\\"Issue\\\">\\n              <mat-option *ngFor=\\\"let o of onlineIssues\\\" [value]=\\\"o\\\"> {{o}} </mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n          <mat-form-field class=\\\"example-full-width\\\">  \\n            <input type=\\\"text\\\" matInput placeholder=\\\"Notes\\\" [(ngModel)]=\\\"docOnlineNotes\\\" name=\\\"docOnlineNotes\\\">  \\n          </mat-form-field>  \\n        </mat-expansion-panel> \\n      </mat-accordion>\\n\\n      <br>\\n\\n      <mat-accordion>\\n        <mat-expansion-panel>\\n          <mat-expansion-panel-header>\\n            <mat-panel-title>\\n              Print Issue \\n            </mat-panel-title>\\n            <mat-panel-description>\\n              \\n            </mat-panel-description>\\n          </mat-expansion-panel-header>\\n          <mat-form-field class=\\\"example-full-width\\\">\\n            <mat-select [(ngModel)]=\\\"docPrintIssue\\\" name=\\\"docPrintIssue\\\" placeholder=\\\"Issue\\\">\\n              <mat-option *ngFor=\\\"let p of printIssues\\\" [value]=\\\"p\\\"> {{p}} </mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n          <mat-form-field class=\\\"example-full-width\\\">\\n            <input type=\\\"number\\\" matInput [(ngModel)]=\\\"docFirstPagePrint\\\" name=\\\"docFirstPagePrint\\\" placeholder=\\\"Start Page\\\">\\n          </mat-form-field>\\n\\n          <mat-form-field class=\\\"example-full-width\\\">\\n            <input type=\\\"number\\\" matInput [(ngModel)]=\\\"docLastPagePrint\\\" name=\\\"docLastPagePrint\\\" placeholder=\\\"End Page\\\">\\n          </mat-form-field>\\n          <mat-form-field class=\\\"example-full-width\\\">\\n            <input type=\\\"number\\\" matInput [(ngModel)]=\\\"docNumPagesPrint\\\" name=\\\"docNumPagesPrint\\\" placeholder=\\\"Number Print Pages\\\">\\n          </mat-form-field>\\n          <mat-form-field class=\\\"example-full-width\\\">  \\n            <input type=\\\"text\\\" matInput placeholder=\\\"Advertising Conflicts\\\" [(ngModel)]=\\\"docAdConflicts\\\" name=\\\"docAdConflicts\\\">  \\n          </mat-form-field>  \\n          <mat-form-field class=\\\"example-full-width\\\">  \\n            <input type=\\\"text\\\" matInput placeholder=\\\"Notes\\\" [(ngModel)]=\\\"docPrintNotes\\\" name=\\\"docPrintNotes\\\">  \\n          </mat-form-field>  \\n        </mat-expansion-panel> \\n      </mat-accordion>\\n\\n      <br>\\n      \\n    <button mat-raised-button type=\\\"submit\\\">Submit</button>\\n\\n    </form>  \\n  </section>\\n</div>\\n\\n     \\n\"","import { Component, OnInit } from '@angular/core';\nimport {AuthService} from '../services/auth.service';\nimport {Router} from '@angular/router';\nimport {FormControl} from '@angular/forms';\n\nimport * as moment from 'moment';\n\nconst config = require('../../../../../config/docs');\n\n@Component({\n  selector: 'app-enterdoc',\n  templateUrl: './enterdoc.component.html',\n  styleUrls: ['./enterdoc.component.css']\n})\nexport class EnterdocComponent implements OnInit {\n \n  //GENERAL FIELDS\n  docTitle: String;\n  docAuthor: String;\n  docDOI: Number;\n  docSection: String;\n  docDescription: String;\n  docCollectionCode1: String;\n  docCollectionCode2: String;\n  docCollectionCode3: String;\n  docCollectionCode4: String;\n  docAuthorType: String;\n  docCommissionDate: Date;\n  docInvoiceDate: Date;\n  docInvoiceAmount: Number;\n\n  //TIMELINE\n\n  docAcceptDate: Date;\n  docPublishDate: Date;\n  docETOCDate: Date;\n  docPaymentDate: Date;\n  docEnteredDate: Date;\n  docCopyEditBeginDate: Date;\n  docCopyEditCompleteDate: Date;\n  docSendSEDate: Date;\n  docReturnSEDate: Date;\n  docSendAuthorDate: Date;\n  docReturnAuthorDate: Date;\n  docFinalizeDate: Date;\n\n\n  //EDITORS\n  docEditor: String;\n  docCoordinator: String;\n  docProofReader: String;\n  docSE1: String;\n  docSE2: String;\n\n  //YES OR NO FIELDS\n  docOpenAccess: Boolean; \n  docTranslation: Boolean;\n  \n  //ONLINE ISSUE\n\n  docOnlineIssue: String;\n  docFirstPageOnline: Number;\n  docLastPageOnline: Number;\n  docNumPagesOnline: Number;\n  docOnlineNotes: String;\n\n  //PRINT ISSUE\n\n  docPrintIssue: String;\n  docFirstPagePrint: Number;\n  docLastPagePrint: Number;\n  docNumPagesPrint: Number;\n  docPrintNotes: String;\n  docAdConflicts: String;\n\n  //NEWS ONLY\n  docPublishDateCMAJnews: Date; \n  docNewsAuthorType: String;\n  docNewsCommissionDate: Date;\n  docNewsInvoiceDate: Date;\n  docNewsInvoiceAmount: Number;\n\n  //Generated from login user\n  username: String;\n\n  //loaded from config file\n  sections: [String]; \n  onlineIssues: [String]; \n  printIssues: [String]; \n  collectionCodes: [String]; \n  authortypes: [String]; \n  editors: [String]; \n  coordinators: [String]; \n  proofers: [String]; \n  se1s: [String]; \n\n  showNews: Boolean = false;\n\n  constructor(\n  \tprivate authService: AuthService,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n    this.showNews = false;\n  \tthis.sections = config.sections;\n    this.onlineIssues = config.onlineIssues;\n    this.printIssues = config.printIssues;\n    this.collectionCodes = config.collectionCodes;\n    this.editors = config.editors;\n    this.coordinators = config.coordinators;\n    this.proofers = config.proofers;\n    this.se1s = config.se1s;\n    this.authortypes = config.authortypes;\n    this.authService.getProfile().subscribe(profile => {\n      this.username = profile.user.username;\n      if(this.username == \"NewsEditor\") {\n        this.showNews = true;\n        this.docSection = 'News';\n        this.getNewsDOI();\n      }\n    },\n    err => {\n      console.log(err);\n      return false;\n    });\n  }\n\n  getNewsDOI() {\n    this.authService.getNewsDOI().subscribe(doi => {\n      this.docDOI = doi[0].docDOI + 1;\n    },\n    err => {\n      console.log(err);\n      return false;\n    });\n  }\n\n  onDocSubmit(){\n\n    let doc = {\n      docUsername: this.username,\n       //GENERAL FIELDS \n    \n      docTitle: this.docTitle,\n      docAuthor: this.docAuthor,\n      docDOI: this.docDOI,\n      docSection: this.docSection,\n      docDescription: this.docDescription,\n      docCollectionCode1: this.docCollectionCode1,\n      docCollectionCode2: this.docCollectionCode2,\n      docCollectionCode3: this.docCollectionCode3,\n      docCollectionCode4: this.docCollectionCode4,    \n      docAuthorType: this.docAuthorType,\n      docCommissionDate: this.docCommissionDate,\n      docInvoiceDate: this.docInvoiceDate,\n      docInvoiceAmount: this.docInvoiceAmount,\n\n      //TIMELINE\n      docAcceptDate: this.docAcceptDate,\n      docPublishDate: this.docPublishDate,\n      docETOCDate: this.docETOCDate,\n      docEnteredDate: this.docEnteredDate,\n      docCopyEditBeginDate: this.docCopyEditBeginDate,\n      docCopyEditCompleteDate: this.docCopyEditCompleteDate,\n      docSendSEDate: this.docSendSEDate,\n      docReturnSEDate: this.docReturnSEDate, \n      docSendAuthorDate: this.docSendAuthorDate,\n      docReturnAuthorDate: this.docReturnAuthorDate,\n      docFinalizeDate: this.docFinalizeDate, \n      docPaymentDate: this.docPaymentDate, \n\n      //EDITORS\n      docEditor: this.docEditor,\n      docCoordinator: this.docCoordinator,\n      docProofReader: this.docProofReader,\n      docSE1: this.docSE1,\n      docSE2: this.docSE2,  \n\n      //YES OR NO FIELDS\n      docOpenAccess: this.docOpenAccess,\n      docTranslation: this.docTranslation,\n\n      //ONLINE ISSUE\n\n      docOnlineIssue: this.docOnlineIssue,\n      docFirstPageOnline: this.docFirstPageOnline,\n      docLastPageOnline: this.docLastPageOnline,\n      docNumPagesOnline: this.docNumPagesOnline,\n      docOnlineNotes: this.docOnlineNotes,\n\n      //PRINT ISSUE\n\n      docPrintIssue: this.docPrintIssue,\n      docFirstPagePrint: this.docFirstPagePrint,\n      docLastPagePrint: this.docLastPagePrint,\n      docNumPagesPrint: this.docNumPagesPrint,\n      docPrintNotes: this.docPrintNotes,\n      docAdConflicts: this.docAdConflicts,\n\n      //NEWS ONLY\n\n      docPublishDateCMAJnews: this.docPublishDateCMAJnews,\n      docNewsAuthorType: this.docNewsAuthorType,\n      docNewsCommissionDate: this.docNewsCommissionDate,\n      docNewsInvoiceDate: this.docNewsInvoiceDate,\n      docNewsInvoiceAmount: this.docNewsInvoiceAmount\n    }\n\n    //ADD FORMATTED DATES IF DATES ENTERED\n    if(this.docCommissionDate) \n      doc['docCommissionDateFormatted'] = this.formatDate(new Date(this.docCommissionDate));\n    if(this.docInvoiceDate) \n      doc['docInvoiceDateFormatted'] = this.formatDate(new Date(this.docInvoiceDate)); \n    if(this.docAcceptDate) \n      doc['docAcceptDateFormatted'] = this.formatDate(new Date(this.docAcceptDate)); \n    if(this.docPublishDate) \n      doc['docPublishDateFormatted'] = this.formatDate(new Date(this.docPublishDate)); \n    if(this.docETOCDate) \n      doc['docETOCDateFormatted'] = this.formatDate(new Date(this.docETOCDate)); \n    if(this.docPaymentDate) \n      doc['docPaymentDateFormatted'] = this.formatDate(new Date(this.docPaymentDate)); \n    if(this.docEnteredDate)\n      doc['docEnteredDateFormatted'] = this.formatDate(new Date(this.docEnteredDate)); \n    if(this.docCopyEditBeginDate)\n      doc['docCopyEditBeginDateFormatted'] = this.formatDate(new Date(this.docCopyEditBeginDate)); \n    if(this.docCopyEditCompleteDate)\n      doc['docCopyEditCompleteDateFormatted'] = this.formatDate(new Date(this.docCopyEditCompleteDate)); \n    if(this.docSendSEDate)\n      doc['docSendSEDateFormatted'] = this.formatDate(new Date(this.docSendSEDate)); \n    if(this.docReturnSEDate)\n      doc['docReturnSEDateFormatted'] = this.formatDate(new Date(this.docReturnSEDate)); \n    if(this.docSendAuthorDate)\n      doc['docSendAuthorDateFormatted'] = this.formatDate(new Date(this.docSendAuthorDate)); \n    if(this.docReturnAuthorDate)\n      doc['docReturnAuthorDateFormatted'] = this.formatDate(new Date(this.docReturnAuthorDate)); \n    if(this.docFinalizeDate)\n      doc['docFinalizeDateFormatted'] = this.formatDate(new Date(this.docFinalizeDate)); \n    if(this.docPublishDateCMAJnews)\n      doc['docPublishDateCMAJnewsFormatted'] = this.formatDate(new Date(this.docPublishDateCMAJnews)); \n    if(this.docNewsCommissionDate)\n      doc['docNewsCommissionDateFormatted'] = this.formatDate(new Date(this.docNewsCommissionDate)); \n    if(this.docNewsInvoiceDate)\n      doc['docNewsInvoiceDateFormatted'] = this.formatDate(new Date(this.docNewsInvoiceDate)); \n\n    console.log(doc);\n\n    this.authService.submitDoc(doc).subscribe(data => {\n      if(data.success){\n        this.router.navigate(['/search']); \n      } else {\n        this.router.navigate(['/enterdoc']); \n        return false;\n      }\n    });\n\n  }\n\n  formatDate(date) {\n    const monthNames = [\n      \"January\", \"February\", \"March\",\n      \"April\", \"May\", \"June\", \"July\",\n      \"August\", \"September\", \"October\",\n      \"November\", \"December\"\n    ];\n    const year = date.getFullYear();\n    const month = date.getMonth();\n    const day = date.getDate();\n    return (monthNames[month] + \" \" + day + \", \" + year);\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport {Router, CanActivate} from '@angular/router';\nimport {AuthService} from '../services/auth.service';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n\tconstructor(private authService: AuthService, private router: Router) {\n\t}\n\n\tcanActivate() {\n\t\tif(this.authService.loggedIn()){\n\t\t\treturn true;\n\t\t} else {\n\t\t\tthis.router.navigate(['/login']);\n\t\t\treturn false;\n\t\t}\n\t}\n}","module.exports = \".center-home {\\n  flex: 1 1 auto;\\n  text-align: center;\\n  margin-top: 50px;\\n}\\n \\nh1 {\\n  font-size: 60px;\\n}\"","module.exports = \"<section class = \\\"mat-typography\\\">\\n  <h1 class = center-home>\\n    CMAJ Legend\\n  </h1>\\n</section>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {AuthService} from '../services/auth.service';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor(\n  \tprivate authService: AuthService,\n    private router: Router) { }\n\n  ngOnInit() {\n  \tthis.router.navigate(['/search']); \n  }\n\n}\n","module.exports = \".example-form {  \\n  min-width: 150px;  \\n  max-width: 500px;  \\n  width: 100%;  \\n}  \\n  \\n.example-full-width {  \\n  width: 100%;  \\n}  \\n  \\n.align-form {\\n  flex: 1 1 auto;\\n  margin-left: 50px;\\n  margin-top: 50px;\\n}\"","module.exports = \"<div *ngIf=\\\"!showResults\\\" class = \\\"align-form\\\">\\n\\n  <section class = \\\"mat-typography\\\">\\n    <h2>Select Issue</h2>\\n    <form (submit)=\\\"onLayoutSearchSubmit()\\\" class=\\\"example-form\\\">  \\n\\n      <mat-form-field class=\\\"example-full-width\\\">\\n        <mat-select [(ngModel)]=\\\"docPrintIssue\\\" name=\\\"docPrintIssue\\\" placeholder=\\\"Print Issue\\\">\\n          <mat-option *ngFor=\\\"let p of printIssues\\\" [value]=\\\"p\\\"> {{p}} </mat-option>\\n        </mat-select>\\n      </mat-form-field>\\n\\n      <button mat-raised-button type=\\\"submit\\\">Search</button>\\n\\n    </form>  \\n  </section>\\n</div>\\n\\n<div *ngIf=\\\"showResults\\\" class = \\\"align-page\\\">\\n\\n  <section class=\\\"mat-typography\\\">\\n\\n    <div *ngFor=\\\"let d of displayDocs; let i = index\\\">\\n      <h2>\\n         {{ d.docTitle }}\\n      </h2>\\n      <p>\\n        DOI: {{ d.docDOI }}\\n      </p>\\n      <p>\\n        Section: {{ d.docSection }}\\n      </p>\\n      <div *ngIf=\\\"i != docIndex\\\">\\n        <p>\\n        First Page: {{ d.docFirstPagePrint }}\\n        </p>\\n        <p>\\n        Last Page: {{ d.docLastPagePrint }}\\n        </p>\\n        <a href=\\\"\\\" onClick=\\\"return false;\\\">\\n          <span (click)=\\\"onDocClick(d, i)\\\"> edit </span>\\n        </a>\\n      </div>\\n\\n      <div *ngIf=\\\"i == docIndex\\\">\\n        <div class = \\\"align-form\\\">\\n          <section class = \\\"mat-typography\\\">\\n           <h4>Enter Page Numbers</h4>\\n            <form (submit)=\\\"onDocSubmit()\\\" class=\\\"example-form\\\">  \\n              <mat-form-field class=\\\"example-full-width\\\">\\n                <input type=\\\"number\\\" matInput [(ngModel)]=\\\"docFirstPagePrint\\\" name=\\\"docFirstPagePrint\\\" placeholder=\\\"First Page\\\">\\n              </mat-form-field>\\n              <mat-form-field class=\\\"example-full-width\\\">\\n                <input type=\\\"number\\\" matInput [(ngModel)]=\\\"docLastPagePrint\\\" name=\\\"docLastPagePrint\\\" placeholder=\\\"Last Page\\\">\\n              </mat-form-field>\\n            <button mat-raised-button type=\\\"submit\\\">Submit</button>\\n            </form>  \\n          </section>\\n        </div>\\n      </div>\\n\\n      <hr class=\\\"hr-style\\\">\\n    </div>\\n\\n    <div class=\\\"flex-center\\\">\\n      <span (click)=\\\"onNewSearch()\\\">\\n        <button mat-raised-button>New Search</button>\\n      </span>\\n    </div>\\n  </section>\\n</div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport {AuthService} from '../services/auth.service';\nimport {Router} from '@angular/router';\nimport {FormControl} from '@angular/forms';\n\nconst config = require('../../../../../config/docs');\n\n@Component({\n  selector: 'app-layout',\n  templateUrl: './layout.component.html',\n  styleUrls: ['./layout.component.css']\n})\nexport class LayoutComponent implements OnInit {\n  showResults: Boolean = false;\n  docIndex: Number = null;\n\n  docID: String; \n  docTitle: String;\n  docDOI: Number;\n  docPrintIssue: String;\n  docFirstPagePrint: Number;\n  docLastPagePrint: Number;\n\n  printIssues: [String]; \n  displayDocs: [Object];\n\nconstructor(\n  \tprivate authService: AuthService,\n    private router: Router,\n) { }\n\n  ngOnInit() {\n  \tthis.printIssues = config.printIssues;\n    this.showResults = false;\n    this.docIndex = null;\n  }\n\n  onLayoutSearchSubmit() {\n    this.authService.getLayoutSearchResults(this.docPrintIssue).subscribe(entries => {\n      this.showResults = true;\n      this.displayDocs = entries; \n      console.log(entries);\n    }, \n    err => {\n        console.log(err);\n        return false;\n    });\n  }\n\n  onNewSearch() {\n    this.docPrintIssue = \"\";\n    this.ngOnInit();\n  }\n\n  onModifySearch() {\n    this.ngOnInit();\n  }\n\n  onDocClick(doc, index) {\n    this.docID = doc[\"_id\"]; \n    this.docFirstPagePrint = doc[\"docFirstPagePrint\"];\n    this.docLastPagePrint = doc[\"docLastPagePrint\"];\n    this.docIndex = index;\n  }\n\n  onDocSubmit() {\n    const pagesDoc = {\n      docID: this.docID, //to identify this doc in database\n      docFirstPagePrint: this.docFirstPagePrint,\n      docLastPagePrint: this.docLastPagePrint\n    }\n    this.authService.putUpdateDoc(pagesDoc).subscribe(doc => {\n      this.onLayoutSearchSubmit();\n      this.docIndex = null;\n    },\n    err => {\n      console.log(err);\n      return false;\n    });\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  loadfile works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {AuthService} from '../services/auth.service';\nimport {Router} from '@angular/router';\nimport {FormControl} from '@angular/forms';\n\nimport * as moment from 'moment';\n\n@Component({\n  selector: 'app-loadfile',\n  templateUrl: './loadfile.component.html',\n  styleUrls: ['./loadfile.component.css']\n})\nexport class LoadfileComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n\n  }\n\n}\n","module.exports = \".example-form {  \\n  min-width: 150px;  \\n  max-width: 500px;  \\n  width: 100%;  \\n}  \\n  \\n.example-full-width {  \\n  width: 100%;  \\n}  \\n  \\n.align-form {\\n  flex: 1 1 auto;\\n  margin-left: 50px;\\n  margin-top: 50px;\\n}\\n\\n\"","module.exports = \"<div class = \\\"align-form\\\">\\n  <section class = \\\"mat-typography\\\">\\n    <h2>Login</h2>\\n    <form (submit)=\\\"onLoginSubmit()\\\" class=\\\"example-form\\\">  \\n      <mat-form-field class=\\\"example-full-width\\\">  \\n        <input type=\\\"text\\\" matInput placeholder=\\\"Username\\\" [(ngModel)]=\\\"username\\\" name=\\\"username\\\">  \\n      </mat-form-field>  \\n      <mat-form-field class=\\\"example-full-width\\\">  \\n        <input type=\\\"password\\\" matInput placeholder=\\\"Password\\\" [(ngModel)]=\\\"password\\\" name=\\\"password\\\">  \\n      </mat-form-field>  \\n      <button mat-raised-button type=\\\"submit\\\">Submit</button>\\n    </form>  \\n    <div *ngIf=\\\"errorMessage\\\">\\n      <h4 class=\\\"red-font\\\">{{errorMessage}}</h4>\\n    </div>\\n    <div *ngIf=\\\"validateMessage\\\">\\n      <h4 class=\\\"red-font\\\">{{validateMessage}}</h4>\\n    </div>\\n  </section>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport {AuthService} from '../services/auth.service';\nimport {Router} from '@angular/router';\nimport {ValidateService} from '../services/validate.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  username: String;\n  password: String;\n  errorMessage: String = \"\";\n  validateMessage: String = \"\";\n\n  constructor(\n    private authService: AuthService,\n    private validateService: ValidateService, \n    private router: Router\n  ) { }\n\n\n  ngOnInit() {\n  }\n\n  onLoginSubmit(){\n    const user = {\n      username: this.username,\n      password: this.password\n    }\n\n    //Required fields\n    if(!this.validateService.validateRegister(user)) {\n      this.validateMessage = \"Please fill in all fields\";\n      setTimeout(() => {\n        this.validateMessage = \"\";\n        return false;\n      }, 2000);\n    }\n    else {\n      this.authService.authenticateUser(user).subscribe(data => {\n        if (data.success) {\n          this.authService.storeUserData(data.token, data.user);\n          if(data.user.username == \"admin\") \n            this.router.navigate(['/register']);\n          else\n            this.router.navigate(['/search']);\n        } \n        else {\n          this.errorMessage = data.msg;\n          this.username =\"\";\n          this.password =\"\";\n          setTimeout(() => {\n            this.errorMessage = \"\";\n            this.router.navigate(['/login']);\n          }, 2000);\n        }\n      });\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatInputModule } from '@angular/material/input';  \nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatNativeDateModule } from '@angular/material';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatInputModule,\n    MatTabsModule,\n    MatButtonModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatExpansionModule,\n    MatCheckboxModule\n  ],\n  exports:[\n    MatInputModule,\n    MatTabsModule,\n    MatButtonModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatExpansionModule,\n    MatCheckboxModule\n  ],\n  declarations: []\n})\nexport class MaterialModule { }\n","module.exports = \".example-form {  \\n  min-width: 150px;  \\n  max-width: 500px;  \\n  width: 100%;  \\n}  \\n  \\n.example-full-width {  \\n  width: 100%;  \\n}  \\n  \\n.align-form {\\n  flex: 1 1 auto;\\n  margin-left: 50px;\\n  margin-top: 50px;\\n}\"","module.exports = \"<div *ngIf=\\\"showMetricsRequest\\\" class = \\\"align-form\\\">\\n  <section class = \\\"mat-typography\\\">\\n    <h4>Welcome {{username}}</h4> \\n    \\n    <h2>Number of manscripts published in date range</h2>\\n    <form (submit)=\\\"onNumDocsSubmit()\\\" class=\\\"example-form\\\">  \\n      <mat-form-field class=\\\"example-full-width\\\">\\n        <mat-select [(ngModel)]=\\\"docSectionNumDocs\\\" name=\\\"docSectionNumDocs\\\" placeholder=\\\"Section\\\">\\n          <mat-option *ngFor=\\\"let s of sections\\\" [value]=\\\"s\\\"> {{s}} </mat-option>\\n        </mat-select>\\n      </mat-form-field>\\n      <mat-form-field class=\\\"example-full-width\\\">\\n        <input matInput [matDatepicker]=\\\"firstDateNumDocsPicker\\\" placeholder=\\\"Published after this date:\\\" [(ngModel)]=\\\"firstDateNumDocs\\\" name=\\\"firstDateNumDocs\\\">\\n        <mat-datepicker-toggle matSuffix [for]=\\\"firstDateNumDocsPicker\\\"></mat-datepicker-toggle>\\n        <mat-datepicker #firstDateNumDocsPicker></mat-datepicker>\\n      </mat-form-field>\\n      <mat-form-field class=\\\"example-full-width\\\">\\n        <input matInput [matDatepicker]=\\\"secondDateNumDocsPicker\\\" placeholder=\\\"Published before this date:\\\" [(ngModel)]=\\\"secondDateNumDocs\\\" name=\\\"secondDateNumDocs\\\">\\n        <mat-datepicker-toggle matSuffix [for]=\\\"secondDateNumDocsPicker\\\"></mat-datepicker-toggle>\\n        <mat-datepicker #secondDateNumDocsPicker></mat-datepicker>\\n      </mat-form-field>\\n      <button mat-raised-button type=\\\"submit\\\">Submit</button>\\n    </form>  \\n\\n    <br>\\n    <br>\\n    <br>\\n    <br>\\n\\n    <h2>Average number of days between accept and publication in date range</h2>\\n    <form (submit)=\\\"onTimeDifferenceSubmit()\\\" class=\\\"example-form\\\">  \\n      <mat-form-field class=\\\"example-full-width\\\">\\n        <mat-select [(ngModel)]=\\\"docSectionTimeDifference\\\" name=\\\"docSectionTimeDifference\\\" placeholder=\\\"Section\\\">\\n          <mat-option *ngFor=\\\"let s of sections\\\" [value]=\\\"s\\\"> {{s}} </mat-option>\\n        </mat-select>\\n      </mat-form-field>\\n      <mat-form-field class=\\\"example-full-width\\\">\\n        <input matInput [matDatepicker]=\\\"firstDateTimeDifferencePicker\\\" placeholder=\\\"Published after this date:\\\" [(ngModel)]=\\\"firstDateTimeDifference\\\" name=\\\"firstDateTimeDifference\\\">\\n        <mat-datepicker-toggle matSuffix [for]=\\\"firstDateTimeDifferencePicker\\\"></mat-datepicker-toggle>\\n        <mat-datepicker #firstDateTimeDifferencePicker></mat-datepicker>\\n      </mat-form-field>\\n       <mat-form-field class=\\\"example-full-width\\\">\\n        <input matInput [matDatepicker]=\\\"secondDateTimeDifferencePicker\\\" placeholder=\\\"Published before this date:\\\" [(ngModel)]=\\\"secondDateTimeDifference\\\" name=\\\"secondDateTimeDifference\\\">\\n        <mat-datepicker-toggle matSuffix [for]=\\\"secondDateTimeDifferencePicker\\\"></mat-datepicker-toggle>\\n        <mat-datepicker #secondDateTimeDifferencePicker></mat-datepicker>\\n      </mat-form-field>\\n      <button mat-raised-button type=\\\"submit\\\">Submit</button>\\n    </form>  \\n\\n    <br>\\n    <br>\\n    <br>\\n    <br>\\n\\n    <h2>Average number of days between payment and publication in date range</h2>\\n    <form (submit)=\\\"onPaymentToPublicationSubmit()\\\" class=\\\"example-form\\\">  \\n      <mat-form-field class=\\\"example-full-width\\\">\\n        <mat-select [(ngModel)]=\\\"docSectionPayToPub\\\" name=\\\"docSectionPayToPub\\\" placeholder=\\\"Section\\\">\\n          <mat-option *ngFor=\\\"let s of sections\\\" [value]=\\\"s\\\"> {{s}} </mat-option>\\n        </mat-select>\\n      </mat-form-field>\\n      <mat-form-field class=\\\"example-full-width\\\">\\n        <input matInput [matDatepicker]=\\\"firstDatePayToPubPicker\\\" placeholder=\\\"Published after this date:\\\" [(ngModel)]=\\\"firstDatePayToPub\\\" name=\\\"firstDatePayToPub\\\">\\n        <mat-datepicker-toggle matSuffix [for]=\\\"firstDatePayToPubPicker\\\"></mat-datepicker-toggle>\\n        <mat-datepicker #firstDatePayToPubPicker></mat-datepicker>\\n      </mat-form-field>\\n       <mat-form-field class=\\\"example-full-width\\\">\\n        <input matInput [matDatepicker]=\\\"secondDatePayToPubPicker\\\" placeholder=\\\"Published before this date:\\\" [(ngModel)]=\\\"secondDatePayToPub\\\" name=\\\"secondDatePayToPub\\\">\\n        <mat-datepicker-toggle matSuffix [for]=\\\"secondDatePayToPubPicker\\\"></mat-datepicker-toggle>\\n        <mat-datepicker #secondDatePayToPubPicker></mat-datepicker>\\n      </mat-form-field>\\n      <button mat-raised-button type=\\\"submit\\\">Submit</button>\\n    </form>  \\n  </section>\\n</div>\\n\\n\\n\\n<div *ngIf=\\\"showResultsNumDocs\\\" class = \\\"align-page\\\">\\n  <section class=\\\"mat-typography\\\">\\n    <h2>There were <span style=\\\"color:red;\\\">{{ numDocs }}</span> {{ docSectionNumDocs }} manuscripts published between {{ firstDateNumDocsFormatted }} and {{ secondDateNumDocsFormatted }}</h2>  \\n    <hr class=\\\"hr-style\\\">\\n    <div *ngFor=\\\"let d of displayDocs; let i = index\\\">\\n      <h2>\\n        {{ d.docTitle }}\\n      </h2>\\n      <p>\\n        Section: {{ d.docSection }}\\n      </p>\\n      <p>\\n        Author: {{ d.docAuthor }} \\n      </p>\\n      <p>\\n        DOI: {{ d.docDOI }}\\n      </p>\\n      <p>\\n        Publish Date: {{ d.docPublishDate }}\\n      </p>\\n      <a href=\\\"\\\" onClick=\\\"return false;\\\">\\n        <span (click)=\\\"onDocClick(d, i)\\\"> See full entry </span>\\n      </a>\\n      <hr class=\\\"hr-style\\\">\\n    </div>\\n  </section>\\n</div>\\n\\n<div *ngIf=\\\"showResultsDateDiff\\\" class = \\\"align-page\\\">\\n  <section class=\\\"mat-typography\\\">\\n\\n    <h2>There was an average of <span style=\\\"color:red;\\\">{{ dateDiff}} </span>days between accept and publication \\n    for <span style=\\\"color:red;\\\">{{ numDocs }}</span>  {{docSectionTimeDifference}} manuscripts published between {{firstDateTimeDifferenceFormatted}} and {{secondDateTimeDifferenceFormatted}}</h2>\\n\\n    <hr class=\\\"hr-style\\\">\\n\\n    <div *ngFor=\\\"let d of displayDocs; let i = index\\\">\\n      <h2>\\n        {{ d.docTitle }}\\n      </h2>\\n      <p>\\n        Section: {{ d.docSection }}\\n      </p>\\n      <p>\\n        Author: {{ d.docAuthor }} \\n      </p>\\n      <p>\\n        DOI: {{ d.docDOI }}\\n      </p>\\n      <p>\\n        Accept Date: {{ d.docAcceptDate }}\\n      </p>\\n      <p>\\n        Publish Date: {{ d.docPublishDate }}\\n      </p>\\n      <p>\\n        Days between accept and publish: {{ d.dateDiff }}\\n      </p>\\n      <a href=\\\"\\\" onClick=\\\"return false;\\\">\\n        <span (click)=\\\"onDocClick(d, i)\\\"> See full entry </span>\\n      </a>\\n      <hr class=\\\"hr-style\\\">\\n    </div>\\n\\n  </section>\\n</div>\\n\\n<div *ngIf=\\\"showResultsPayToPub\\\" class = \\\"align-page\\\">\\n  <section class=\\\"mat-typography\\\">\\n\\n    <h2>There was an average of <span style=\\\"color:red;\\\">{{ dateDiff}} </span>days between payment and publication \\n    for <span style=\\\"color:red;\\\">{{ numDocs }}</span>  {{docSectionTimeDifference}} manuscripts published between {{firstDatePayToPubFormatted}} and {{secondDatePayToPubFormatted}}</h2>\\n\\n    <hr class=\\\"hr-style\\\">\\n\\n    <div *ngFor=\\\"let d of displayDocs; let i = index\\\">\\n      <h2>\\n        {{ d.docTitle }}\\n      </h2>\\n      <p>\\n        Section: {{ d.docSection }}\\n      </p>\\n      <p>\\n        Author: {{ d.docAuthor }} \\n      </p>\\n      <p>\\n        DOI: {{ d.docDOI }}\\n      </p>\\n      <p>\\n        Payment Date: {{ d.docPaymentDate }}\\n      </p>\\n      <p>\\n        Publish Date: {{ d.docPublishDate }}\\n      </p>\\n      <p>\\n        Days between payment and publish: {{ d.dateDiff }}\\n      </p>\\n      <a href=\\\"\\\" onClick=\\\"return false;\\\">\\n        <span (click)=\\\"onDocClick(d, i)\\\"> See full entry </span>\\n      </a>\\n      <hr class=\\\"hr-style\\\">\\n    </div>\\n\\n  </section>\\n</div>\\n\\n\\n\\n<div *ngIf=\\\"showNoResults\\\">\\n  <section class=\\\"mat-typography align-page\\\">\\n    <h2>There were no results found for your request</h2>\\n  </section>\\n  <hr class=\\\"hr-style\\\">\\n</div>\\n\\n<div *ngIf=\\\"!showMetricsRequest\\\">\\n  <br>\\n  <div class=\\\"flex-center\\\">\\n    <span (click)=\\\"onModifyMetrics()\\\">\\n       <button mat-raised-button>Modify Metrics Request</button>\\n    </span>\\n    <span (click)=\\\"onNewMetrics()\\\">\\n      <button mat-raised-button>New Metrics Request</button>\\n    </span>\\n  </div>\\n</div>\\n\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport {AuthService} from '../services/auth.service';\nimport {Router} from '@angular/router';\nimport {FormControl} from '@angular/forms';\n\nimport * as moment from 'moment';\n\nconst config = require('../../../../../config/docs');\n\n@Component({\n  selector: 'app-metrics',\n  templateUrl: './metrics.component.html',\n  styleUrls: ['./metrics.component.css']\n})\nexport class MetricsComponent implements OnInit {\n  showResultsNumDocs: Boolean = false;\n  showResultsDateDiff: Boolean = false;\n  showResultsPayToPub: Boolean = false;\n  showMetricsRequest: Boolean = true;\n  showNoResults: Boolean = false;\n  username: String;\n  sections: [String];\n  displayDocs: [Object];\n\n  docSectionNumDocs: String;\n  firstDateNumDocs: Date;\n  secondDateNumDocs: Date;\n  firstDateNumDocsFormatted: String;\n  secondDateNumDocsFormatted: String;\n  docPublishDate: Date;\n  docPublishDateFormatted: String;\n  docAcceptDate: Date;\n  docAcceptDateFormatted: String;\n  numDocs: Number;\n\n  docSectionTimeDifference: String;\n  firstDateTimeDifference: Date;\n  secondDateTimeDifference: Date;\n  firstDateTimeDifferenceFormatted: String;\n  secondDateTimeDifferenceFormatted: String;\n\n  docSectionPayToPub: String;\n  firstDatePayToPub: Date;\n  secondDatePayToPub: Date;\n  firstDatePayToPubFormatted: String;\n  secondDatePayToPubFormatted: String;\n\n  dateDiff: Number;\n\n  constructor(\n  \tprivate authService: AuthService,\n    private router: Router,\n  ) { }\n\n  ngOnInit() {\n    this.sections = config.sections;\n    this.showMetricsRequest = true;\n    this.showResultsNumDocs = false;\n    this.showResultsDateDiff = false;\n    this.showResultsPayToPub = false;\n    this.showNoResults = false;\n    console.log(this.showMetricsRequest);\n    this.authService.getProfile().subscribe(profile => {\n      this.username = this.authService.capitalizeFirstLetter(profile.user.username);\n      },\n    err => {\n      console.log(err);\n      return false;\n    });\n  }\n\n  onNumDocsSubmit() {\n    this.showMetricsRequest = false;\n    this.authService.getNumDocs(\n      this.docSectionNumDocs,\n      this.firstDateNumDocs,\n      this.secondDateNumDocs\n    ).subscribe(entries => {\n      if(entries.length>0) {\n        this.showResultsNumDocs=true;\n        this.showNoResults=false;\n        this.firstDateNumDocsFormatted = this.formatDate(new Date(this.firstDateNumDocs)); \n        this.secondDateNumDocsFormatted = this.formatDate(new Date(this.secondDateNumDocs)); \n        this.showResultsNumDocs = true;\n        this.displayDocs = entries; \n        this.numDocs = entries.length;\n        for (let i=0; i<entries.length; i++) {\n          this.displayDocs[i]['docPublishDate'] = this.formatDate(new Date(entries[i].docPublishDate)); \n        }\n      } \n      else {\n        this.showNoResults=true;\n      }\n\n      console.log(this.displayDocs);\n    }, \n    err => {\n        console.log(err);\n        return false;\n    });\n  }\n\n  onTimeDifferenceSubmit() {\n    this.showMetricsRequest = false;\n    this.authService.getTimeDiff(\n      this.docSectionTimeDifference,\n      this.firstDateTimeDifference,\n      this.secondDateTimeDifference\n    ).subscribe(entries => {\n      if(entries.length >0) {\n        this.showResultsDateDiff = true;\n        this.showNoResults=false;\n        this.firstDateTimeDifferenceFormatted = this.formatDate(new Date(this.firstDateTimeDifference)); \n        this.secondDateTimeDifferenceFormatted = this.formatDate(new Date(this.secondDateTimeDifference)); \n        this.displayDocs = entries;\n        this.numDocs = entries.length;\n        for (let i=0; i<entries.length; i++) {\n          this.displayDocs[i]['docAcceptDate'] = this.formatDate(new Date(entries[i].docAcceptDate)); \n          this.displayDocs[i]['docPublishDate'] = this.formatDate(new Date(entries[i].docPublishDate)); \n        }\n        let arrDateDiff = [];\n        for(let i=0; i<entries.length; i++) {\n          let acceptMoment = moment(entries[i].docAcceptDate);\n          let publishMoment = moment(entries[i].docPublishDate);\n          let dateDiff = publishMoment.diff(acceptMoment, 'days');\n          this.displayDocs[i]['dateDiff'] = dateDiff;\n      \t  arrDateDiff.push(dateDiff);\n        }\n        let sum = arrDateDiff.reduce((x,y) => x+y);\n        let average = sum/arrDateDiff.length;\n        this.dateDiff = Math.round(average);\n      }\n      else {\n        this.showNoResults=true;\n      }\n          console.log(this.displayDocs);\n    }, \n    err => {\n        console.log(err);\n        return false;\n    });\n  }\n\n  onPaymentToPublicationSubmit() {\n    this.showMetricsRequest = false;\n    this.authService.getTimeDiff(\n      this.docSectionPayToPub,\n      this.firstDatePayToPub,\n      this.secondDatePayToPub\n    ).subscribe(entries => {\n      if(entries.length >0) {\n        this.showResultsPayToPub = true;\n        this.showNoResults=false;\n        this.firstDatePayToPubFormatted = this.formatDate(new Date(this.firstDatePayToPub)); \n        this.secondDatePayToPubFormatted = this.formatDate(new Date(this.secondDatePayToPub)); \n        this.displayDocs = entries;\n        console.log(entries);\n        this.numDocs = entries.length;\n        for (let i=0; i<entries.length; i++) {\n          this.displayDocs[i]['docPaymentDate'] = this.formatDate(new Date(entries[i].docPaymentDate)); \n          this.displayDocs[i]['docPublishDate'] = this.formatDate(new Date(entries[i].docPublishDate)); \n        }\n        let arrDateDiff = [];\n        for(let i=0; i<entries.length; i++) {\n          let paymentMoment = moment(entries[i].docPaymentDate);\n          let publishMoment = moment(entries[i].docPublishDate);\n          console.log(paymentMoment, publishMoment);\n          let dateDiff = publishMoment.diff(paymentMoment, 'days');\n          this.displayDocs[i]['dateDiff'] = dateDiff;\n          arrDateDiff.push(dateDiff);\n        }\n        let sum = arrDateDiff.reduce((x,y) => x+y);\n        let average = sum/arrDateDiff.length;\n        this.dateDiff = Math.round(average);\n      }\n      else {\n        this.showNoResults=true;\n      }\n          console.log(this.displayDocs);\n    }, \n    err => {\n        console.log(err);\n        return false;\n    });\n  }\n\n  onNewMetrics() {\n  \tthis.docSectionNumDocs = \"\";\n  \tthis.docSectionTimeDifference = \"\";\n    this.docSectionPayToPub = \"\";\n  \tthis.firstDateNumDocs = null;\n  \tthis.secondDateNumDocs = null;\n  \tthis.firstDateTimeDifference = null;\n  \tthis.secondDateTimeDifference = null;\n    this.firstDatePayToPub = null;\n    this.secondDatePayToPub = null;\n  \tthis.ngOnInit();\n  }\n\n  onModifyMetrics() {\n  \tthis.ngOnInit();\n  }\n\n  onDocClick(doc, index) {\n    const docID = doc[\"_id\"]; \n    this.router.navigate(['/details', docID]);\n  }\n\n  formatDate(date) {\n    const monthNames = [\n      \"January\", \"February\", \"March\",\n      \"April\", \"May\", \"June\", \"July\",\n      \"August\", \"September\", \"October\",\n      \"November\", \"December\"\n    ];\n    const year = date.getFullYear();\n    const month = date.getMonth();\n    const day = date.getDate();\n    return (monthNames[month] + \" \" + day + \", \" + year);\n  }\n\n\n\n\n}\n","module.exports = \".nav-center-tabs {\\n  flex: 1 1 auto;\\n  text-align: center;\\n}\\n \\na {\\n  font-size: 16px;\\n  color: black;\\n}\\n \\na:link {\\n    color: black;\\n}\\n \\na:visited {\\n    color: black;\\n}\\n \\na:hover {\\n    color: #A9A9A9;\\n}\\n \\na:active {\\n    color: #A9A9A9;\\n}\\n \\n.logo {\\n\\tfont-size: 22px;\\n\\tcolor:red;\\n}\\n\\n\"","module.exports = \"<section class = \\\"mat-typography\\\">\\n<span class = \\\"nav-center-tabs\\\">\\n  <nav mat-tab-nav-bar [disableRipple]=\\\"true\\\">\\n    <!-- disableRipple to remove the text in tabs from jumping on click -->\\n      <a mat-tab-link \\n        [routerLink] = \\\"['/home']\\\" \\n        routerLinkActive #rla=\\\"routerLinkActive\\\"\\n        [active]=\\\"rla.isActive\\\"\\n      >\\n        <span class=\\\"logo\\\"> CMAJ LEGEND </span>\\n      </a>\\n      <a *ngIf=\\\"authService.adminLoggedIn()\\\" mat-tab-link \\n        [routerLink] = \\\"['/register']\\\" \\n        routerLinkActive #rlb=\\\"routerLinkActive\\\"\\n        [active]=\\\"rlb.isActive\\\"\\n      >\\n        Users \\n      </a>\\n\\n      <a *ngIf=\\\"authService.adminLoggedIn()\\\" mat-tab-link \\n        [routerLink] = \\\"['/sections']\\\" \\n        routerLinkActive #rlj=\\\"routerLinkActive\\\"\\n        [active]=\\\"rlj.isActive\\\"\\n      >\\n        Sections \\n      </a>\\n\\n      <!--\\n      <a *ngIf=\\\"!authService.loggedIn()\\\" mat-tab-link \\n        [routerLink] = \\\"['/login']\\\" \\n        routerLinkActive #rlc=\\\"routerLinkActive\\\"\\n        [active]=\\\"rlc.isActive\\\"\\n      >\\n        Login \\n      </a>\\n      -->\\n      \\n      <a *ngIf=\\\"authService.loggedIn() && !authService.adminLoggedIn()\\\" mat-tab-link \\n        [routerLink] = \\\"['/enterdoc']\\\" \\n        routerLinkActive #rld=\\\"routerLinkActive\\\"\\n        [active]=\\\"rld.isActive\\\"\\n      >\\n        Add Doc \\n      </a>\\n      <a *ngIf=\\\"authService.loggedIn() && !authService.adminLoggedIn()\\\" mat-tab-link \\n        [routerLink] = \\\"['/recent']\\\" \\n        routerLinkActive #rlh=\\\"routerLinkActive\\\"\\n        [active]=\\\"rlh.isActive\\\"\\n      >\\n        Recent \\n      </a>\\n      <a *ngIf=\\\"authService.loggedIn() && !authService.adminLoggedIn()\\\" mat-tab-link \\n        [routerLink] = \\\"['/search']\\\" \\n        routerLinkActive #rle=\\\"routerLinkActive\\\"\\n        [active]=\\\"rle.isActive\\\"\\n      >\\n        Search \\n      </a>\\n      <a *ngIf=\\\"authService.loggedIn() && !authService.adminLoggedIn()\\\" mat-tab-link \\n        [routerLink] = \\\"['/layout']\\\" \\n        routerLinkActive #rlf=\\\"routerLinkActive\\\"\\n        [active]=\\\"rlf.isActive\\\"\\n      >\\n        Layout \\n      </a>\\n      <a *ngIf=\\\"authService.loggedIn() && !authService.adminLoggedIn()\\\" mat-tab-link \\n        [routerLink] = \\\"['/metrics']\\\" \\n        routerLinkActive #rlg=\\\"routerLinkActive\\\"\\n        [active]=\\\"rlg.isActive\\\"\\n      >\\n        Metrics \\n      </a>\\n\\n      <a *ngIf=\\\"authService.loggedIn()\\\" mat-tab-link \\n        (click)=\\\"onLogoutClick()\\\" href=\\\"\\\"\\n      >\\n        Logout \\n      </a>\\n      \\n    </nav>\\n\\n</span>\\n</section>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {Router} from '@angular/router';\nimport {AuthService} from '../services/auth.service';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor( \n  \tpublic authService: AuthService,\n    private router: Router \n  ) { }\n\n  ngOnInit() {\n  }\n\n  onLogoutClick(){\n    this.authService.logout();\n    this.router.navigate(['/login']);\n    return false;\n  }\n\n}\n\n\n","module.exports = \"\\n\\n\\n\\n\"","module.exports = \"\\n<div class = \\\"align-page\\\">\\n\\n  <section class=\\\"mat-typography\\\">\\n\\n    <div *ngFor=\\\"let d of displayDocs; let i = index\\\">\\n      <h2>\\n         {{ d.docTitle }}\\n      </h2>\\n      <p>\\n        Section: {{ d.docSection }}\\n      </p>\\n      <p>\\n        Author: {{ d.docAuthor }} \\n      </p>\\n      <p>\\n        DOI: {{ d.docDOI }}\\n      </p>\\n      <a href=\\\"\\\" onClick=\\\"return false;\\\">\\n        <span (click)=\\\"onDocClick(d, i)\\\"> See full entry </span>\\n      </a>\\n      <hr class=\\\"hr-style\\\">\\n    </div>\\n  </section>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport {AuthService} from '../services/auth.service';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-recent',\n  templateUrl: './recent.component.html',\n  styleUrls: ['./recent.component.css']\n})\nexport class RecentComponent implements OnInit {\n  username: string;\n  numDocs: number = 20;\n  displayDocs: [Object];\n\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n    this.authService.getProfile().subscribe(profile => {\n      this.username = profile.user.username;\n      this.getRecentDocs();\n    }, \n    err => {\n      console.log(err);\n      return false;\n    });\n  }\n\n  getRecentDocs() {\n    this.authService.getRecentAdded(this.username, this.numDocs).subscribe(docs => {\n      console.log(docs);\n      this.displayDocs = docs;\n    }, \n    err => {\n      console.log(err);\n      return false;\n    });\n  }\n\n  onDocClick(doc, index) {\n    const docID = doc[\"_id\"]; \n    this.router.navigate(['/details', docID]);\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  refresh works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-refresh',\n  templateUrl: './refresh.component.html',\n  styleUrls: ['./refresh.component.css']\n})\nexport class RefreshComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".example-form {  \\n  min-width: 150px;  \\n  max-width: 500px;  \\n  width: 100%;  \\n}  \\n  \\n.example-full-width {  \\n  width: 100%;  \\n}  \\n  \\n.align-form {\\n  flex: 1 1 auto;\\n  margin-left: 50px;\\n  margin-top: 50px;\\n}\\n\\n\"","module.exports = \"<div class = \\\"align-form\\\">\\n  <section class = \\\"mat-typography\\\">\\n    <h4>Welcome {{currentUser}}</h4> \\n    <h2>Add User</h2>\\n    <form (submit)=\\\"onRegisterSubmit()\\\" class=\\\"example-form\\\">  \\n      <mat-form-field class=\\\"example-full-width\\\">  \\n        <input type=\\\"text\\\" matInput placeholder=\\\"Username\\\" [(ngModel)]=\\\"username\\\" name=\\\"username\\\">  \\n      </mat-form-field>  \\n      <mat-form-field class=\\\"example-full-width\\\">  \\n        <input type=\\\"password\\\" matInput placeholder=\\\"Password\\\" [(ngModel)]=\\\"password\\\" name=\\\"password\\\">  \\n      </mat-form-field>  \\n      <button mat-raised-button type=\\\"submit\\\">Submit</button>\\n    </form>  \\n    <div *ngIf=\\\"errorMessage\\\">\\n      <h4 class=\\\"red-font\\\">{{errorMessage}}</h4>\\n    </div>\\n    <div *ngIf=\\\"validateMessage\\\">\\n      <h4 class=\\\"red-font\\\">{{validateMessage}}</h4>\\n    </div>\\n\\n    <br><br>\\n    <h2>Current Users</h2>\\n\\n    <div *ngFor=\\\"let d of displayUsers; let i = index\\\">\\n      <h3>\\n         {{ d.username }}\\n      </h3>\\n      <a href=\\\"\\\" onClick=\\\"return false;\\\">\\n        <span (click)=\\\"onUserDelete(d, i)\\\"> Delete</span>\\n      </a>\\n      <hr class=\\\"hr-style\\\">\\n    </div>\\n\\n  </section>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {AuthService} from '../services/auth.service';\nimport {Router} from '@angular/router';\nimport {ValidateService} from '../services/validate.service';\n\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  username: String;\n  currentUser: String;\n  password: String;\n  errorMessage: String = \"\";\n  validateMessage: String = \"\";\n  displayUsers :[Object];\n  deleteMessage : String = \"\";\n\n  constructor(\n    private authService: AuthService,\n    private validateService: ValidateService, \n    private router: Router\n  ) { }\n\n  ngOnInit() {\n\n    this.authService.getProfile().subscribe(profile => {\n      this.currentUser = profile.user.username;\n    },\n    err => {\n      console.log(err);\n      return false;\n    });\n    this.onGetUsers();\n  }\n\n  onGetUsers() {\n    this.authService.getUsers().subscribe(entries => {\n      this.displayUsers = entries; \n      console.log(entries);\n    }, \n    err => {\n        console.log(err);\n        return false;\n    });\n  }\n\n\n  onUserDelete(user, index) {\n    console.log(\"delete user\");\n    const userID = user[\"_id\"]; \n    this.authService.deleteUser(userID).subscribe(user => {\n    },\n    err => {\n      console.log(err);\n      return false;\n    });\n    setTimeout(() => {\n      this.username = \"\";\n      this.password = \"\";\n      this.onGetUsers();\n      this.router.navigate(['/register']); \n    }, 1000);\n  }\n\n  onRegisterSubmit(){\n    const user = {\n      username: this.username,\n      password: this.password\n    }\n\n    //Required fields\n    if(!this.validateService.validateRegister(user)) {\n      this.validateMessage = \"Please fill in all fields\";\n      setTimeout(() => {\n        this.validateMessage = \"\";\n        return false;\n      }, 2000);\n    }\n    else {\n      //Register User\n      this.authService.registerUser(user).subscribe(data => {\n        if(data.success){\n          setTimeout(() => {\n            this.username = \"\";\n            this.password = \"\";\n            this.onGetUsers();\n            this.router.navigate(['/register']); \n          }, 1000);\n        } \n        else {\n          this.errorMessage = data.msg;\n          setTimeout(() => {\n            this.errorMessage = \"\";\n            this.username = \"\";\n      \t    this.password = \"\";\n            this.router.navigate(['/register']); \n          }, 2000);\n        }\n      },\n      err => {\n      console.log(err);\n      return false;\n      });\n    }\n  }\n\n\n}\n","module.exports = \".example-form {  \\n  min-width: 150px;  \\n  max-width: 500px;  \\n  width: 100%;  \\n}  \\n  \\n.example-full-width {  \\n  width: 100%;  \\n}  \\n  \\n.align-form {\\n  flex: 1 1 auto;\\n  margin-left: 50px;\\n  margin-top: 50px;\\n}\"","module.exports = \"\\n\\n\\n<div *ngIf=\\\"!showResults\\\" class = \\\"align-form\\\">\\n\\n  <section class = \\\"mat-typography\\\">\\n    <h4>Welcome {{username}}</h4> \\n    <h2>Enter Search Query</h2>\\n    <form (submit)=\\\"onSearchSubmit()\\\" class=\\\"example-form\\\">  \\n\\n      <mat-form-field class=\\\"example-full-width\\\">\\n        <mat-select [(ngModel)]=\\\"docSection\\\" name=\\\"docSection\\\" placeholder=\\\"Section\\\">\\n          <mat-option *ngFor=\\\"let s of sections\\\" [value]=\\\"s\\\"> {{s}} </mat-option>\\n        </mat-select>\\n      </mat-form-field>\\n\\n      <mat-form-field class=\\\"example-full-width\\\">  \\n        <input type=\\\"text\\\" matInput placeholder=\\\"Title Keywords\\\" [(ngModel)]=\\\"docTitle\\\" name=\\\"docTitle\\\">  \\n      </mat-form-field>  \\n\\n      <mat-form-field class=\\\"example-full-width\\\">  \\n        <input type=\\\"text\\\" matInput placeholder=\\\"Author\\\" [(ngModel)]=\\\"docAuthor\\\" name=\\\"docAuthor\\\">\\n      </mat-form-field>  \\n\\n      <mat-form-field class=\\\"example-full-width\\\">  \\n        <input type=\\\"number\\\" matInput placeholder=\\\"DOI\\\" [(ngModel)]=\\\"docDOI\\\" name=\\\"docDOI\\\">\\n      </mat-form-field>  \\n\\n      <mat-form-field class=\\\"example-full-width\\\">\\n        <mat-select [(ngModel)]=\\\"docOnlineIssue\\\" name=\\\"docOnlineIssue\\\" placeholder=\\\"Online Issue\\\">\\n          <mat-option *ngFor=\\\"let o of onlineIssues\\\" [value]=\\\"o\\\"> {{o}} </mat-option>\\n        </mat-select>\\n      </mat-form-field>\\n\\n      <mat-form-field class=\\\"example-full-width\\\">\\n        <mat-select [(ngModel)]=\\\"docPrintIssue\\\" name=\\\"docPrintIssue\\\" placeholder=\\\"Print Issue\\\">\\n          <mat-option *ngFor=\\\"let p of printIssues\\\" [value]=\\\"p\\\"> {{p}} </mat-option>\\n        </mat-select>\\n      </mat-form-field>\\n\\n\\n\\n\\n\\n      <button mat-raised-button type=\\\"submit\\\">Search</button>\\n\\n    </form>  \\n  </section>\\n</div>\\n\\n<div *ngIf=\\\"showResults\\\" class = \\\"align-page\\\">\\n\\n  <section class=\\\"mat-typography\\\">\\n\\n    <div *ngFor=\\\"let d of displayDocs; let i = index\\\">\\n      <h2>\\n         {{ d.docTitle }}\\n      </h2>\\n      <p>\\n        Section: {{ d.docSection }}\\n      </p>\\n      <p>\\n        Author: {{ d.docAuthor }} \\n      </p>\\n      <p>\\n        DOI: {{ d.docDOI }}\\n      </p>\\n      <a href=\\\"\\\" onClick=\\\"return false;\\\">\\n        <span (click)=\\\"onDocClick(d, i)\\\"> See full entry </span>\\n      </a>\\n      <hr class=\\\"hr-style\\\">\\n    </div>\\n\\n    <div class=\\\"flex-center\\\">\\n      <span (click)=\\\"onModifySearch()\\\">\\n         <button mat-raised-button>Modify Search</button>\\n      </span>\\n      <span (click)=\\\"onNewSearch()\\\">\\n        <button mat-raised-button>New Search</button>\\n      </span>\\n      <span (click)=\\\"onDownload()\\\">\\n        <button mat-raised-button>Download CSV</button>\\n      </span>\\n    </div>\\n\\n  </section>\\n</div>\\n\\n\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport {AuthService} from '../services/auth.service';\nimport {Router} from '@angular/router';\nimport {FormControl} from '@angular/forms';\n\n\nconst config = require('../../../../../config/docs');\n\ndeclare var require: any;\ndeclare var fs: any;\nlet Json2csvParser = require('json2csv').Parser;\n//var fs = require('fs');\n\n@Component({\n  selector: 'app-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.css']\n})\nexport class SearchComponent implements OnInit {\n  showResults: Boolean = false;\n\n  docSection: String;\n  docTitle: String;\n  docAuthor: String;\n  docDOI: Number;\n  docOnlineIssue: String;\n  docPrintIssue: String;\n\n  sections: [String];\n  onlineIssues: [String]; \n  printIssues: [String]; \n  displayDocs: [Object];\n\n  username: String;\n\nconstructor(\n  \tprivate authService: AuthService,\n    private router: Router,\n) { }\n\n  ngOnInit() {\n  \tthis.sections = config.sections;\n    this.onlineIssues = config.onlineIssues;\n    this.printIssues = config.printIssues;\n    this.showResults = false;\n    this.authService.getProfile().subscribe(profile => {\n      this.username = this.authService.capitalizeFirstLetter(profile.user.username);\n      },\n    err => {\n      console.log(err);\n      return false;\n    });\n  }\n\n  onSearchSubmit() {\n    this.authService.getSearchResults(\n    \tthis.docOnlineIssue,\n    \tthis.docSection,\n    \tthis.docPrintIssue,\n    \tthis.docAuthor,\n    \tthis.docDOI,\n    \tthis.docTitle\n    ).subscribe(entries => {\n      this.showResults = true;\n      this.displayDocs = entries; \n      console.log(entries);\n    }, \n    err => {\n        console.log(err);\n        return false;\n    });\n  }\n\n  onNewSearch() {\n  \tthis.docOnlineIssue = \"\";\n  \tthis.docSection = \"\";\n  \tthis.docAuthor = \"\";\n  \tthis.docPrintIssue = \"\";\n  \tthis.docDOI = null;\n  \tthis.docTitle = \"\";\n  \tthis.ngOnInit();\n  }\n\n  onDownload() {\n\n    const fields = [\n                    {\n                      label: 'Title',\n                      value: 'docTitle'\n                    },\n                    {\n                      label: 'Author',\n                      value: 'docAuthor'\n                    },\n                    {\n                      label: 'DOI', \n                      value: 'docDOI'\n                    },\n                    {\n                      label: 'Section',\n                      value: 'docSection'\n                    },\n                    {\n                      label: 'Description',\n                      value: 'docDescription'\n                    },\n                    {\n                      label: 'Collection Code 1',\n                      value: 'docCollectionCode1' \n                    },\n                    {\n                      label: 'Collection Code 2',\n                      value: 'docCollectionCode2' \n                    },\n                    {\n                      label: 'Collection Code 3',\n                      value: 'docCollectionCode3' \n                    },\n                    {\n                      label: 'Collection Code 4',\n                      value: 'docCollectionCode4' \n                    },\n                    {\n                      label: 'Commission Date',\n                      value: 'docCommissionDateFormatted' \n                    },\n                    {\n                      label: 'Invoice Date',\n                      value: 'docInvoiceDateFormatted' \n                    },\n                    {\n                      label: 'Invoice Amount',\n                      value: 'docInvoiceAmount' \n                    },\n                    {\n                      label: 'Accept Date',\n                      value: 'docAcceptDateFormatted' \n                    },\n                    {\n                      label: 'Publish Date',\n                      value: 'docPublishDateFormatted' \n                    },\n                    {\n                      label: 'InCopy Entered Date',\n                      value: 'docEnteredDateFormatted' \n                    },\n                    {\n                      label: 'Begin Copy Edit',\n                      value: 'docCopyEditBeginDateFormatted'\n                    },\n                    {\n                      label: 'Copy Edit Complete',\n                      value: 'docCopyEditCompleteDateFormatted' \n                    },\n                    {\n                      label: 'Sent to SE',\n                      value: 'docSendSEDateFormatted' \n                    },\n                    {\n                      label: 'Returned from SE',\n                      value: 'docReturnSEDateFormatted' \n                    },\n                    {\n                      label: 'Finalized',\n                      value: 'docFinalizeDateFormatted' \n                    },\n                    {\n                      label: 'MS Editor',\n                      value: 'docEditor' \n                    },\n                    {\n                      label: 'MS Coordinator',\n                      value: 'docCoordinator' \n                    },\n                    {\n                      label: 'MS Proofreader',\n                      value: 'docProofReader' \n                    },\n                    {\n                      label: 'SE1',\n                      value: 'docSE1' \n                    },\n                    {\n                      label: 'SE2',\n                      value: 'docSE2' \n                    },\n                    {\n                      label: 'Open Access',\n                      value: 'docOpenAccess' \n                    },\n                    {\n                      label: 'Translation',\n                      value: 'docTranslation' \n                    },\n                    {\n                      label: 'Online Issue',\n                      value: 'docOnlineIssue' \n                    },\n                    {\n                      label: 'First Page Online Issue',\n                      value: 'docFirstPageOnline' \n                    },\n                    {\n                      label: 'Last Page Online Issue',\n                      value: 'docLastPageOnline' \n                    },\n                    {\n                      label: 'Number of Pages Online',\n                      value: 'docNumPagesOnline' \n                    },\n                    {\n                      label: 'Notes for Online Issue',\n                      value: 'docOnlineNotes' \n                    },\n                    {\n                      label: 'Print Issue',\n                      value: 'docPrintIssue' \n                    },\n                    {\n                      label: 'First Page Print Issue', \n                      value: 'docFirstPagePrint'\n                    },\n                    {\n                      label: 'Last Page Print Issue',\n                      value: 'docLastPagePrint' \n                    },\n                    {\n                      label: 'Number of Pages Print',\n                      value: 'docNumPagesPrint' \n                    },\n                    {\n                      label: 'Notes for Print Issue',\n                      value: 'docPrintNotes' \n                    },\n                    {\n                      label: 'Ad Conflicts',\n                      value: 'docAdConflicts' \n                    },\n                    {\n                      label: 'Date Posted on CMAJ News',\n                      value: 'docPublishDateCMAJnewsFormatted' \n                    },\n                    {\n                      label: 'News Author Type',\n                      value: 'docNewsAuthorType' \n                    },\n                    {\n                      label: 'News Commission Date',\n                      value: 'docNewsCommissionDateFormatted' \n                    },\n                    {\n                      label: 'News Invoice Date',\n                      value: 'docNewsInvoiceDateFormatted' \n                    },\n                    {\n                      label: 'News Invoice Amount',\n                      value: 'docNewsInvoiceAmount' \n                    }\n                  ];\n\n    const data = this.displayDocs; \n    const json2csvParser = new Json2csvParser({ fields });\n    const csv = json2csvParser.parse(data);\n    console.log(csv);\n    let a = document.createElement(\"a\");\n    a.setAttribute('style', 'display:none;');\n    document.body.appendChild(a);\n    let blob = new Blob([csv], { type: 'text/csv' });\n    let url= window.URL.createObjectURL(blob);\n    a.href = url;\n    a.download = 'Search_Results.csv';\n    a.click();\n    return 'success';\n  }\n\n  onModifySearch() {\n  \tthis.ngOnInit();\n  }\n\n  onDocClick(doc, index) {\n    const docID = doc[\"_id\"]; \n    this.router.navigate(['/details', docID]);\n  }\n\n  formatDate(date) {\n    const monthNames = [\n      \"January\", \"February\", \"March\",\n      \"April\", \"May\", \"June\", \"July\",\n      \"August\", \"September\", \"October\",\n      \"November\", \"December\"\n    ];\n    const year = date.getFullYear();\n    const month = date.getMonth();\n    const day = date.getDate();\n    return (monthNames[month] + \" \" + day + \", \" + year);\n  }\n\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  searchresults works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {AuthService} from '../services/auth.service';\nimport {Router} from '@angular/router';\nimport {ActivatedRoute} from '@angular/router';\n\n@Component({\n  selector: 'app-searchresults',\n  templateUrl: './searchresults.component.html',\n  styleUrls: ['./searchresults.component.css']\n})\nexport class SearchresultsComponent implements OnInit {\n  private sub: any;\n  docs: [Object];\n\n  constructor(\n    private route: ActivatedRoute,\n    private authService: AuthService,\n    private router: Router\n  ) { } \n\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      //this.docs = params;\n      console.log(params);\n      console.log(params[0]);\n      console.log(params[1]);\n\n      }\n    );\n\n  }\n\n}\n","module.exports = \".example-form {  \\n  min-width: 150px;  \\n  max-width: 500px;  \\n  width: 100%;  \\n}  \\n  \\n.example-full-width {  \\n  width: 100%;  \\n}  \\n  \\n.align-form {\\n  flex: 1 1 auto;\\n  margin-left: 50px;\\n  margin-top: 50px;\\n}\\n\"","module.exports = \"<div class = \\\"align-form\\\">\\n  <section class = \\\"mat-typography\\\">\\n    <h4>Welcome {{username}}</h4> \\n    <h2>Add Section</h2>\\n    <form (submit)=\\\"onSectionSubmit()\\\" class=\\\"example-form\\\">  \\n      <mat-form-field class=\\\"example-full-width\\\">  \\n        <input type=\\\"text\\\" matInput placeholder=\\\"Section\\\" [(ngModel)]=\\\"section\\\" name=\\\"section\\\">  \\n      </mat-form-field>  \\n      <button mat-raised-button type=\\\"submit\\\">Submit</button>\\n    </form>  \\n    <div *ngIf=\\\"errorMessage\\\">\\n      <h4 class=\\\"red-font\\\">{{errorMessage}}</h4>\\n    </div>\\n    <div *ngIf=\\\"validateMessage\\\">\\n      <h4 class=\\\"red-font\\\">{{validateMessage}}</h4>\\n    </div>\\n    <div *ngIf=\\\"successMessage\\\">\\n      <h4 class=\\\"red-font\\\">{{successMessage}}</h4>\\n    </div>\\n\\n    <br><br>\\n    <h2>Current Sections</h2>\\n\\n    <div *ngFor=\\\"let d of displaySections; let i = index\\\">\\n      <h3>\\n         {{ d.section }}\\n      </h3>\\n      <a href=\\\"\\\" onClick=\\\"return false;\\\">\\n        <span (click)=\\\"onSectionDelete(d, i)\\\"> Delete</span>\\n      </a>\\n      <hr class=\\\"hr-style\\\">\\n    </div>\\n\\n  </section>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {AuthService} from '../services/auth.service';\nimport {Router} from '@angular/router';\nimport {ValidateService} from '../services/validate.service';\n\n@Component({\n  selector: 'app-sections',\n  templateUrl: './sections.component.html',\n  styleUrls: ['./sections.component.css']\n})\nexport class SectionsComponent implements OnInit {\n  username: String;\n  section: String;\n  errorMessage: String = \"\";\n  successMessage: String = \"\";\n  validateMessage: String = \"\";\n  displaySections: [Object];\n\n  constructor(    \n  \tprivate authService: AuthService,\n    private validateService: ValidateService, \n    private router: Router) { }\n\n  ngOnInit() {\n\n    this.authService.getProfile().subscribe(profile => {\n      this.username = profile.user.username;\n    },\n    err => {\n      console.log(err);\n      return false;\n    });\n    this.onGetSections();\n  }\n\n  onGetSections() {\n    this.authService.getSections().subscribe(entries => {\n      this.displaySections = entries; \n    }, \n    err => {\n        console.log(err);\n        return false;\n    });\n  }\n\n\n  onSectionDelete(section, index) {\n    const sectionID = section[\"_id\"]; \n    this.authService.deleteSection(sectionID).subscribe(section => {\n    },\n    err => {\n      console.log(err);\n      return false;\n    });\n    setTimeout(() => {\n      this.onGetSections();\n      this.router.navigate(['/sections']); \n    }, 1000);\n  }\n\n  onSectionSubmit(){\n    const section = {\n      section: this.section\n    }\n\n    //Required fields\n    if(!this.validateService.validateSection(section)) {\n      this.validateMessage = \"Please fill section field\";\n      setTimeout(() => {\n        this.validateMessage = \"\";\n        return false;\n      }, 2000);\n    }\n    else {\n      this.authService.addSection(section).subscribe(data => {\n        if(data.success){\n          setTimeout(() => {\n            this.section = \"\";\n            this.onGetSections();\n            this.router.navigate(['/sections']); \n          }, 1000);\n        } \n        else {\n          this.errorMessage = data.msg;\n          setTimeout(() => {\n            this.errorMessage = \"\";\n            this.section = \"\";\n            this.router.navigate(['/sections']); \n          }, 2000);\n        }\n      });\n    }\n  }\n\n}\n\n\n\n\n\n\n","import { Injectable } from '@angular/core';\nimport{Http, Headers, URLSearchParams, RequestOptions} from '@angular/http';\nimport { HttpClientModule } from '@angular/common/http';\n//import 'rxjs/add/operator/map';\nimport { map } from \"rxjs/operators\";\n\n@Injectable()\nexport class AuthService {\n\n  authToken: any;\n  user: any;\n \n  //inject http into constructor\n  constructor(private http: Http) { }\n\n  registerUser(user) {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    return this.http.post('http://localhost:3000/users/register', user, {headers: headers}) \n    //return this.http.post('users/register', user, {headers: headers})\n      .pipe(map(res => res.json()));\n  }\n\n  authenticateUser(user) {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    //return this.http.post('users/authenticate', user, {headers: headers}) \n    return this.http.post('http://localhost:3000/users/authenticate', user, {headers: headers}) \n      .pipe(map(res => res.json()));\n  }\n\n  getUsers() {\n    this.loadToken();\n    let headers = new Headers();\n    headers.append('Authorization', this.authToken);\n    headers.append('Content-Type', 'application/json');\n    return this.http.get('http://localhost:3000/users/getUsers', {headers: headers}) \n    //return this.http.get('/users/getUsers', {headers: headers}) \n      .pipe(map(res => res.json()));\n  } \n\n  deleteUser(docID) {\n    console.log(\"delete user\");\n    this.loadToken();\n    let headers = new Headers();\n    let params = new URLSearchParams();\n    let options = new RequestOptions();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', this.authToken);\n    params.set('docID', docID);\n    options.headers = headers;\n    options.search = params;\n    return this.http.delete('http://localhost:3000/users/deleteUser', options)\n    //return this.http.delete('/users/deleteUser', options)\n      .pipe(map(res => res.json()));\n  }\n\n  getProfile() {\n    this.loadToken();\n    let headers = new Headers();\n    headers.append('Authorization', this.authToken);\n    headers.append('Content-Type', 'application/json');\n    //return this.http.get('users/profile', {headers: headers}) \n    return this.http.get('http://localhost:3000/users/profile', {headers: headers}) \n      .pipe(map(res => res.json()));\n  } \n\n  addSection(section) {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    return this.http.post('http://localhost:3000/sections/addSection', section, {headers: headers}) \n    //return this.http.post('/sections/addSection', section, {headers: headers}) \n      .pipe(map(res => res.json()));\n  }\n\n  getSections() {\n    this.loadToken();\n    let headers = new Headers();\n    headers.append('Authorization', this.authToken);\n    headers.append('Content-Type', 'application/json');\n    return this.http.get('http://localhost:3000/sections/getSections', {headers: headers}) \n    //return this.http.get('/sections/getSections', {headers: headers}) \n      .pipe(map(res => res.json()));\n  } \n\n  deleteSection(docID) {\n    this.loadToken();\n    let headers = new Headers();\n    let params = new URLSearchParams();\n    let options = new RequestOptions();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', this.authToken);\n    params.set('docID', docID);\n    options.headers = headers;\n    options.search = params;\n    //return this.http.delete('http://localhost:3000/sections/deleteSection', options)\n    return this.http.delete('docs/deleteOneDoc', options)\n      .pipe(map(res => res.json()));\n  }\n\n  submitDoc(doc) {\n    this.loadToken();\n    let headers = new Headers();\n    headers.append('Authorization', this.authToken);\n    headers.append('Content-Type', 'application/json');\n    console.log(\"auth....doc\" + doc);\n    return this.http.post('http://localhost:3000/docs/submitdoc', doc, {headers: headers}) \n    //return this.http.post('docs/submitdoc', doc, {headers: headers}) \n      .pipe(map(res => res.json()));\n  }\n\n  getRecentAdded(username, limit) {\n    this.loadToken();\n    let headers = new Headers();\n    let params = new URLSearchParams();\n    let options = new RequestOptions();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', this.authToken);\n    params.set('docUsername', username);\n    params.set('limit', limit);\n    options.headers = headers;\n    options.search = params;\n    return this.http.get('http://localhost:3000/docs/getRecentAdded', options) \n    //return this.http.get('docs/getRecentAdded', options) \n      .pipe(map(res => res.json()));\n  } \n\n  getOneDoc(docID) {\n    this.loadToken();\n    let headers = new Headers();\n    let params = new URLSearchParams();\n    let options = new RequestOptions();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', this.authToken);\n    params.set('docID', docID);\n    options.headers = headers;\n    options.search = params;\n    return this.http.get('http://localhost:3000/docs/getOneDoc', options)\n   // return this.http.get('docs/getOneDoc', options)\n      .pipe(map(res => res.json()));\n  }\n\n  putUpdateDoc(editedDoc) {\n    this.loadToken();\n    let headers = new Headers();\n    headers.append('Authorization', this.authToken);\n    headers.append('Content-Type', 'application/json');\n    return this.http.put('http://localhost:3000/docs/updateDoc', editedDoc, {headers: headers}) \n    //return this.http.put('docs/updateDoc', editedDoc, {headers: headers}) \n      .pipe(map(res => res.json()));\n  } \n\n  deleteOneDoc(docID) {\n    this.loadToken();\n    let headers = new Headers();\n    let params = new URLSearchParams();\n    let options = new RequestOptions();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', this.authToken);\n    params.set('docID', docID);\n    options.headers = headers;\n    options.search = params;\n    return this.http.delete('http://localhost:3000/docs/deleteOneDoc', options)\n    //return this.http.delete('docs/deleteOneDoc', options)\n      .pipe(map(res => res.json()));\n  }\n\n  getSearchResults(onlineIssue, section, printIssue, author, DOI, title) {\n    let headers = new Headers();\n    let params = new URLSearchParams();\n    let options = new RequestOptions();\n    headers.append('Content-Type', 'application/json');\n    params.set('docOnlineIssue', onlineIssue);\n    params.set('docPrintIssue', printIssue);\n    params.set('docSection', section);\n    params.set('docAuthor', author);\n    params.set('docDOI', DOI);\n    params.set('docTitle', title);\n    options.headers = headers;\n    options.search = params;\n    return this.http.get('http://localhost:3000/docs/getSearchResults', options) \n    //return this.http.get('/docs/getSearchResults', options) \n      .pipe(map(res => res.json()));\n  } \n\n  getNumDocs(section, firstDateNumDocs, secondDateNumDocs) {\n    let headers = new Headers();\n    let params = new URLSearchParams();\n    let options = new RequestOptions();\n    headers.append('Content-Type', 'application/json');\n    params.set('docSection', section);\n    params.set('docFirstDateNumDocs', firstDateNumDocs);\n    params.set('docSecondDateNumDocs', secondDateNumDocs);\n    options.headers = headers;\n    options.search = params;\n    return this.http.get('http://localhost:3000/docs/getNumDocs', options) \n    //return this.http.get('docs/getNumDocs', options) \n      .pipe(map(res => res.json()));\n  } \n\n  getTimeDiff(section, firstDateTimeDiff, secondDateTimeDiff) {\n    let headers = new Headers();\n    let params = new URLSearchParams();\n    let options = new RequestOptions();\n    headers.append('Content-Type', 'application/json');\n    params.set('docSection', section);\n    params.set('docFirstDateTimeDifference', firstDateTimeDiff);\n    params.set('docSecondDateTimeDifference', secondDateTimeDiff);\n    options.headers = headers;\n    options.search = params;\n    return this.http.get('http://localhost:3000/docs/getTimeDiff', options) \n    //return this.http.get('docs/getTimeDiff', options) \n      .pipe(map(res => res.json()));\n  } \n\n  getLayoutSearchResults(printIssue) {\n    let headers = new Headers();\n    let params = new URLSearchParams();\n    let options = new RequestOptions();\n    headers.append('Content-Type', 'application/json');\n    params.set('docPrintIssue', printIssue);\n    //params.set('itemOffset', itemOffset);\n    //params.set('limit', limit);\n    //params.set('searchParameter', searchParameter);\n    options.headers = headers;\n    options.search = params;\n    return this.http.get('http://localhost:3000/docs/getLayoutSearchResults', options) \n    //return this.http.get('docs/getLayoutSearchResults', options) \n      .pipe(map(res => res.json()));\n  } \n\n  getNewsDOI() {\n    this.loadToken();\n    let headers = new Headers();\n    headers.append('Authorization', this.authToken);\n    headers.append('Content-Type', 'application/json');\n    return this.http.get('http://localhost:3000/docs/getNewsDOI', {headers: headers}) \n    //return this.http.get('/docs/getNewsDOI', {headers: headers}) \n      .pipe(map(res => res.json()));\n  } \n\n  storeUserData(token, user) {\n    localStorage.setItem('id_token', token);\n    localStorage.setItem('user', JSON.stringify(user)); //local storage can only store strings, not objects\n    this.authToken = token;\n    this.user = user;\n  }\n\n  loadToken(){\n    const token = localStorage.getItem('id_token');\n    this.authToken = token;\n    return token;\n  }\n\n  loadUser(){\n    const user = localStorage.getItem('user');\n    return user;\n  }\n\n  logout(){\n    this.authToken = null;\n    this.user = null;\n    localStorage.clear();\n  }\n\n  loggedIn() {\n    const token = localStorage.getItem('id_token');\n    return token != null;\n  }\n\n  adminLoggedIn() {\n    const userJSON = JSON.parse(this.loadUser()); \n    return userJSON!=null && userJSON[\"username\"]==\"admin\";\n  }\n\n  capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class ValidateService {\n\n  constructor() { }\n\n  validateRegister(user){\n    if(user.username == (\"\" || undefined) || user.password == (\"\" || undefined)) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  validateSection(section){\n    if(section.section == \"\" || undefined) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n}","module.exports = \".example-form {  \\n  min-width: 150px;  \\n  max-width: 500px;  \\n  width: 100%;  \\n}  \\n  \\n.example-full-width {  \\n  width: 100%;  \\n}  \\n  \\n.align-form {\\n  flex: 1 1 auto;\\n  margin-left: 50px;\\n  margin-top: 50px;\\n}\"","module.exports = \"  \\n<div class =\\\"align-form\\\">\\n  <section class = \\\"mat-typography\\\">\\n    <h4>Welcome {{username}}</h4> \\n    <h2>List of users</h2>\\n    <hr class=\\\"hr-style\\\">\\n    <div *ngIf=\\\"deleteMessage\\\">\\n      <h4 class=\\\"red-font\\\">{{deleteMessage}}</h4>\\n    </div>\\n\\n    <div *ngFor=\\\"let d of displayUsers; let i = index\\\">\\n\\n      <h3>\\n         {{ d.username }}\\n      </h3>\\n      <a href=\\\"\\\" onClick=\\\"return false;\\\">\\n        <span (click)=\\\"onUserDelete(d, i)\\\"> Delete</span>\\n      </a>\\n      <hr class=\\\"hr-style\\\">\\n    </div>\\n\\n\\n  </section>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {AuthService} from '../services/auth.service';\nimport {Router} from '@angular/router';\nimport {FormControl} from '@angular/forms';\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.css']\n})\nexport class UsersComponent implements OnInit {\n\n  username: String;\n  displayUsers :[Object];\n  deleteMessage : String = \"\";\n\n  constructor(\n  \tprivate authService: AuthService,\n    private router: Router,\n  ) { }\n\n  ngOnInit() {\n\n    this.authService.getProfile().subscribe(profile => {\n      this.username = profile.user.username;\n    },\n    err => {\n      console.log(err);\n      return false;\n    });\n    this.onGetUsers();\n  }\n\n  onGetUsers() {\n    this.authService.getUsers().subscribe(entries => {\n      this.displayUsers = entries; \n      console.log(entries);\n    }, \n    err => {\n        console.log(err);\n        return false;\n    });\n  }\n\n\n  onUserDelete(user, index) {\n    console.log(\"delete user\");\n    const userID = user[\"_id\"]; \n    this.authService.deleteUser(userID).subscribe(user => {\n    },\n    err => {\n      console.log(err);\n      return false;\n    });\n    this.onGetUsers();\n  }\n\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}